{"version":3,"sources":["utils/ActionHelpers.js","screens/Posts/posts.type.js","screens/Posts/posts.reducer.js","screens/Search/search.type.js","screens/Search/search.reducer.js","screens/Users/users.type.js","screens/Users/users.reducer.js","screens/Contests/contests.type.js","screens/Contests/contests.reducer.js","screens/Comments/comments.type.js","screens/Comments/comments.reducer.js","RootReducer.js","sw.js","utils/DataManager.js","ApolloClient.js","api/Post.js","screens/Posts/posts.action.js","components/Loader.js","screens/Posts/views/PostsListItem.js","screens/Posts/views/EmptyPosts.js","screens/Posts/views/PostsList.js","api/Search.js","api/User.js","screens/Search/search.action.js","screens/Users/users.action.js","screens/Users/views/UsersInfoItem.js","screens/Users/views/UsersInfoVerticalItem.js","screens/Search/views/EmptySearch.js","screens/Search/views/SearchPage.js","api/Contest.js","screens/Contests/contests.action.js","screens/Contests/views/ContestsItem.js","screens/Contests/views/EmptyContests.js","screens/Contests/views/Contests.js","api/Comment.js","screens/Comments/comments.action.js","components/TimeAgoExt.js","screens/Comments/views/CommentItem.js","screens/Comments/views/EmptyComments.js","screens/Comments/views/CommentsList.js","components/Notification/defaults.js","components/Notification/stylesheet.js","components/Notification/Toast.jsx","components/Notification/Notification.jsx","screens/Posts/views/PostNotFound.js","screens/Posts/views/page/PostPage.js","screens/Contests/views/ContestNotFound.js","screens/Contests/views/ContestPostItem.js","screens/Contests/views/ContestPosts.js","utils/Helpers.js","screens/Contests/views/page/ContestPage.js","screens/Users/views/UserNotFound.js","screens/Users/views/page/UserPage.js","App.js","index.js"],"names":["createActionSet","actionName","PENDING","concat","SUCCESS","ERROR","GET_POSTS","GET_POSTS_CONTENTS","initialState","posts","postInfo","isPendingPosts","isPendingContentsPostInfo","error","latestPostsReducer","state","arguments","length","undefined","action","type","Object","objectSpread","replaceFeed","payload","toConsumableArray","SEARCH_POSTS","SEARCH_USERS","SEARCH_TAGS","users","tags","isPendingUsers","isPendingTags","keyword","searchReducer","GET_USER_INFO","GET_USER_POSTS","GET_FOLLOWERS","GET_FOLLOWING","GET_PAID_USERS","user","followers","following","paidUsers","isPendingUser","isPendingFollowers","isPendingFollowing","isPendingPaidUsers","usersReducer","GET_CONTESTS","GET_CONTEST_INFO","GET_CONTEST_POSTS","contestInfo","contests","isPendingContest","isPendingContests","isPendingContestPosts","contestsReducer","console","log","contestPosts","GET_COMMENTS","CREATE_COMMENT","UPDATE_COMMENT","DELETE_COMMENT","comments","isPendingComments","commentsReducer","appReducer","combineReducers","postsReducer","search","rootReducer","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","isLocalhost","Boolean","window","location","hostname","match","DataManager","item","data","sessionStorage","setItem","JSON","stringify","getItem","clear","cache","InMemoryCache","dataIdFromObject","result","__typename","id","addTypename","cacheRedirects","Query","httpLink","createPersistedQueryLink","BatchHttpLink","uri","link","ApolloLink","operation","forward","token","Accounts","getLoginToken","setContext","headers","meteor-login-token","http","includeExtensions","includeQuery","client","ApolloClient","from","getLatestPosts","gql","_templateObject","getPostInfo","_templateObject2","_templateObject3","getPosts","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_ref","userId","albumId","tagId","festId","withImage","duration","personal","skip","limit","force","dispatch","getState","query","variables","fetchPolicy","message","getPostContents","_ref2","postId","getPost","Loader","react_default","a","createElement","vkui","Component","PostsListItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","post","author","excerpt","_id","className","size","description","profile","name","before","src","image","onClick","go","data-view","data-panel","data-postid","data-headertitle","title","coverImg","dangerouslySetInnerHTML","__html","goToPost","EmptyPosts","goToFunc","PostsList","fetchMorePosts","activeTab","_this$props","setState","lastType","_this$props2","_this2","_this$props3","userTabs","selected","activeTabs","theme","views_EmptyPosts","components_Loader","map","views_PostsListItem","key","level","connect","bindActionCreators","Search_templateObject","searchPostsFull","Search_templateObject2","searchUsersFull","Search_templateObject3","Search_templateObject4","Search_templateObject5","Search_templateObject6","User_templateObject","getUser","User_templateObject2","getPaidUsersFull","User_templateObject3","searchPosts","User_templateObject4","User_templateObject5","User_templateObject6","User_templateObject7","User_templateObject8","User_templateObject9","User_templateObject10","User_templateObject11","User_templateObject12","User_templateObject13","User_templateObject14","User_templateObject15","searchUsers","_ref4","getUserInfo","username","getPaidUsers","_ref5","UsersInfoItem","goToUser","e","followUser","unFollowUser","avatar","indexOf","replace","bio","data-userid","data-username","shortBio","substr","followButton","isFollowing","style","marginTop","textAlign","margin","_24_favorite_default","fill","marginBottom","display","alignItems","justifyContent","copy_default","stats","postsCount","users_default","followersCount","multiline","EmptySearch","SearchPage","handleSearch","currTab","changeTab","onChange","fetchMoreUsers","searchResult","_this$state","vertical","value","UsersInfoVerticalItem","views_EmptySearch","views_UsersInfoItem","fetchMoreUser","getFestivals","Contest_templateObject","getContest","Contest_templateObject2","getFestPosts","Contest_templateObject3","getContestInfo","slug","getFestivalsInfo","genreType","sortType","isDuel","getFestPostsInfo","_ref3","city","filterType","festPosts","ContestsItem","viewContest","contest","data-contestid","data-contestslug","width","borderRadius","brief","marginLeft","usersData","to","usersCount","EmptyContests","Contests","fetchMoreContests","views_EmptyContests","views_ContestsItem","getComments","Comment_templateObject","getCommentsFunc","Comment_templateObject2","Comment_templateObject3","Comment_templateObject4","Comment_templateObject5","objectId","parentId","TimeAgoExt","date","i18n","isComment","currLang","language","formatter","buildFormatter","russianStrings","englishStrings","react_timeago_lib_default","itemProp","React","PureComponent","comment","components_TimeAgoExt","postedAt","content","EmptyComments","CommentsList","fetchMoreComments","views_EmptyComments","CommentItem","defaults","wrapperId","animationDuration","timeout","zIndex","colors","color","backgroundColor","success","warning","info","stylesheet","container","position","right","top","left","pointerEvents","transition","transform","msTransition","msTransform","WebkitTransition","WebkitTransform","OTransition","OTransform","MozTransition","MozTransform","cursor","padding","show","hide","Toast","containerStyle","styles","getToastStyle","contentStyle","assign","customStyle","background","text","animateState","setTimeout","updateStyle","stateStyle","document","getElementById","hasChildNodes","renderTimeout","target","ReactDOM","render","Notification_Toast","renderToast","unmountComponentAtNode","Notification","graphQLErrors","NotificationContainer","options","PostNotFound","PostPage","likePost","debounce","asyncToGenerator","regenerator_default","mark","_callee","_this$props$post","totalLikes","currUserLikes","likes","wrap","_context","prev","next","currUser","abrupt","ReactGA","event","category","prevState","hearts","t0","stop","createLikes","b","Math","floor","random","c","toFixed","push","fontSize","animation","aria-hidden","index","x","splice","setNewLike","liked","scrollTo","views_PostNotFound","postLikes","postLiked","viewCount","Fragment","htmlBody","tag","like_default","like_outline_default","heart","href","comment_outline_default","commentsCount","isPost","isShortBio","views_CommentsList","objectType","ContestPostItem","handleChange","sliderValue","handleChangeComplete","currentLevel","changeRating","currUserId","isJury","rateFestPost","rating","_callee2","_this$props$post$post","_this$state2","_context2","handleComments","showComments","juryRating","juryStats","i","_props$post$post","showFull","likeCount","isAdultContent","increasePostViewCount","LatestPosts","refetchData","refreshing","citySelected","fest","isPendingLatestPosts","views_ContestPostItem","linkify","linkifyIt","tlds","parseText","commText","hrefLinks","linkText","mentions","links","url","includes","linkifyText","mention","ContestPage","changeSort","handleDesc","showDesc","levelDone","minJuryRating","amountOfPosts","contestVariables","updateContestLevel","t","handleInputChange","defineProperty","fetchedUser","contestSlug","contestId","ContestNotFound","isFestival","activeLevel","currDate","Date","toDate","fromDate","juryData","jury","festDescription","numSentences","split","sentsCounter","shortDesc","restDesc","levels","isFinal","alt","genres","genre","join","partners","logoLink","images","rel","ContestPosts","isMultiLevel","juryId","UserPage","showBio","UserNotFound","socLinks","vkUser","instagramUser","twitterUser","facebookUser","emails","verified","verified_default","fire_default","karma","toString","website","esm","OutboundLink","eventLabel","role","globe_default","domain","extractHostname","splitArr","arrLen","extractRootDomain","place_default","logo_vk_default","logo_instagram_default","logo_twitter_default","logo_facebook_default","youtubeUser","videocam_default","albumsCount","booksCount","followingCount","dropdown_default","views_PostsList","shortPost","hideAds","App","VKConnect","subscribe","detail","_isMounted","userInfoDenied","send","getTheme","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","_e$currentTarget$data","currentTarget","dataset","view","panel","postid","contestid","contestslug","userid","headertitle","activeStory","activeView","activePanel","newState","returnStory","returnView","returnPanel","returnTab","headerModalTitle","returnTo","onStoryChange","_e$currentTarget$data2","story","epictab","epicTab","popularTab","_this$state3","osname","platform","tabbar","data-story","data-epictab","newsfeed_default","search_default","favorite_default","noShadow","views_SearchPage","views_Contests","IOS","chevron_back_default","back_default","addon","page_PostPage","page_ContestPage","page_UserPage","store","createStore","applyMiddleware","thunk","es","src_App","URL","process","origin","addEventListener","fetch","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1f5a7523.chunk.js","sourcesContent":["export const createActionSet = actionName => ({\n  PENDING: `${actionName}_PENDING`,\n  SUCCESS: `${actionName}_SUCCESS`,\n  ERROR: `${actionName}_ERROR`\n})\n","import { createActionSet } from '../../utils/ActionHelpers'\n\nexport const GET_POSTS = createActionSet('GET_POSTS')\nexport const GET_POSTS_CONTENTS = createActionSet('GET_POSTS_CONTENTS')\n","import {\n  GET_POSTS,\n  GET_POSTS_CONTENTS\n} from './posts.type'\n\nconst initialState = {\n  posts: [],\n  postInfo: null,\n  isPendingPosts: false,\n  isPendingContentsPostInfo: false,\n  error: ''\n}\n\nconst latestPostsReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GET_POSTS.PENDING:\n      return {\n        ...state,\n        posts: action.replaceFeed ? [] : state.posts,\n        error: '',\n        isPendingPosts: true\n      }\n    case GET_POSTS.SUCCESS:\n      return {\n        ...state,\n        posts: action.replaceFeed ? action.payload : [...state.posts, ...action.payload],\n        error: '',\n        isPendingPosts: false\n      }\n    case GET_POSTS.ERROR:\n      return {\n        ...state,\n        posts: [],\n        error: action.payload,\n        isPendingPosts: false\n      }\n    case GET_POSTS_CONTENTS.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingContentsPostInfo: true\n      }\n    case GET_POSTS_CONTENTS.SUCCESS:\n      return {\n        ...state,\n        postInfo: action.payload,\n        error: '',\n        isPendingContentsPostInfo: false\n      }\n    case GET_POSTS_CONTENTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingContentsPostInfo: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default latestPostsReducer\n","import { createActionSet } from '../../utils/ActionHelpers'\n\nexport const SEARCH_POSTS = createActionSet('SEARCH_POSTS')\nexport const SEARCH_USERS = createActionSet('SEARCH_USERS')\nexport const SEARCH_TAGS = createActionSet('SEARCH_TAGS')\n","import {\n  SEARCH_POSTS,\n  SEARCH_USERS,\n  SEARCH_TAGS\n} from './search.type'\n\nconst initialState = {\n  posts: [],\n  users: [],\n  tags: [],\n  isPendingPosts: false,\n  isPendingUsers: false,\n  isPendingTags: false,\n  keyword: '',\n  error: ''\n}\n\nconst searchReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case SEARCH_POSTS.PENDING:\n      return {\n        ...state,\n        posts: [],\n        error: '',\n        isPendingPosts: true\n      }\n    case SEARCH_POSTS.SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        keyword: action.keyword,\n        error: '',\n        isPendingPosts: false\n      }\n    case SEARCH_POSTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingPosts: false\n      }\n    case SEARCH_USERS.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingUsers: true\n      }\n    case SEARCH_USERS.SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        keyword: action.keyword,\n        error: '',\n        isPendingUsers: false\n      }\n    case SEARCH_USERS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingUsers: false\n      }\n    case SEARCH_TAGS.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingTags: true\n      }\n    case SEARCH_TAGS.SUCCESS:\n      return {\n        ...state,\n        tags: action.payload,\n        keyword: action.keyword,\n        error: '',\n        isPendingTags: false\n      }\n    case SEARCH_TAGS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingTags: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default searchReducer\n","import { createActionSet } from '../../utils/ActionHelpers'\n\nexport const GET_USER_INFO = createActionSet('GET_USER_INFO')\nexport const GET_USER_POSTS = createActionSet('GET_USER_POSTS')\nexport const GET_FOLLOWERS = createActionSet('GET_FOLLOWERS')\nexport const GET_FOLLOWING = createActionSet('GET_FOLLOWING')\nexport const GET_PAID_USERS = createActionSet('GET_PAID_USERS')\nexport const FOLLOW = createActionSet('FOLLOW')\nexport const UNFOLLOW = createActionSet('UNFOLLOW')\n","import {\n  GET_USER_INFO,\n  GET_USER_POSTS,\n  GET_FOLLOWERS,\n  GET_FOLLOWING,\n  GET_PAID_USERS\n} from './users.type'\n\nconst initialState = {\n  user: null,\n  posts: [],\n  followers: [],\n  following: [],\n  paidUsers: [],\n  isPendingUser: false,\n  isPendingPosts: false,\n  isPendingFollowers: false,\n  isPendingFollowing: false,\n  isPendingPaidUsers: false,\n  error: ''\n}\n\nconst usersReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GET_USER_INFO.PENDING:\n      return {\n        ...state,\n        user: {},\n        error: '',\n        isPendingUser: true\n      }\n    case GET_USER_INFO.SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        error: '',\n        isPendingUser: false\n      }\n    case GET_USER_INFO.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingUser: false\n      }\n    case GET_USER_POSTS.PENDING:\n      return {\n        ...state,\n        posts: [],\n        error: '',\n        isPendingPosts: true\n      }\n    case GET_USER_POSTS.SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        error: '',\n        isPendingPosts: false\n      }\n    case GET_USER_POSTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingPosts: false\n      }\n    case GET_FOLLOWERS.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingFollowers: true\n      }\n    case GET_FOLLOWERS.SUCCESS:\n      return {\n        ...state,\n        followers: action.payload,\n        error: '',\n        isPendingFollowers: false\n      }\n    case GET_FOLLOWERS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingFollowers: false\n      }\n    case GET_FOLLOWING.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingFollowing: true\n      }\n    case GET_FOLLOWING.SUCCESS:\n      return {\n        ...state,\n        following: action.payload,\n        error: '',\n        isPendingFollowing: false\n      }\n    case GET_FOLLOWING.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingFollowing: false\n      }\n    case GET_PAID_USERS.PENDING:\n      return {\n        ...state,\n        error: '',\n        isPendingPaidUsers: true\n      }\n    case GET_PAID_USERS.SUCCESS:\n      return {\n        ...state,\n        paidUsers: action.payload,\n        error: '',\n        isPendingPaidUsers: false\n      }\n    case GET_PAID_USERS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingPaidUsers: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n","import { createActionSet } from '../../utils/ActionHelpers'\n\nexport const GET_CONTESTS = createActionSet('GET_CONTESTS')\nexport const GET_CONTEST_INFO = createActionSet('GET_CONTEST_INFO')\nexport const GET_CONTEST_POSTS = createActionSet('GET_CONTEST_POSTS')\n","import {\n  GET_CONTESTS,\n  GET_CONTEST_INFO,\n  GET_CONTEST_POSTS\n} from './contests.type'\n\nconst initialState = {\n  contestInfo: null,\n  contests: [],\n  isPendingContest: false,\n  isPendingContests: false,\n  isPendingContestPosts: false,\n  error: ''\n}\n\nconst contestsReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GET_CONTESTS.PENDING:\n      return {\n        ...state,\n        contests: [],\n        error: '',\n        isPendingContests: true\n      }\n    case GET_CONTESTS.SUCCESS:\n      return {\n        ...state,\n        contests: action.payload,\n        error: '',\n        isPendingContests: false\n      }\n    case GET_CONTESTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingContests: false\n      }\n    case GET_CONTEST_INFO.PENDING:\n      return {\n        ...state,\n        contestInfo: {},\n        error: '',\n        isPendingContest: true\n      }\n    case GET_CONTEST_INFO.SUCCESS:\n      console.log('action:', action)\n\n      return {\n        ...state,\n        contestInfo: action.payload,\n        error: '',\n        isPendingContest: false\n      }\n    case GET_CONTEST_INFO.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingContest: false\n      }\n    case GET_CONTEST_POSTS.PENDING:\n      return {\n        ...state,\n        contestPosts: [],\n        error: '',\n        isPendingContestPosts: true\n      }\n    case GET_CONTEST_POSTS.SUCCESS:\n      console.log('action:', action)\n\n      return {\n        ...state,\n        contestPosts: action.payload,\n        error: '',\n        isPendingContestPosts: false\n      }\n    case GET_CONTEST_POSTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingContestPosts: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default contestsReducer\n","import { createActionSet } from '../../utils/ActionHelpers'\n\nexport const GET_COMMENTS = createActionSet('GET_COMMENTS')\nexport const CREATE_COMMENT = createActionSet('CREATE_COMMENT')\nexport const UPDATE_COMMENT = createActionSet('UPDATE_COMMENT')\nexport const DELETE_COMMENT = createActionSet('DELETE_COMMENT')\n","import {\n  GET_COMMENTS,\n  CREATE_COMMENT,\n  UPDATE_COMMENT,\n  DELETE_COMMENT\n} from './comments.type'\n\nconst initialState = {\n  comments: [],\n  isPendingComments: false,\n  error: ''\n}\n\nconst commentsReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GET_COMMENTS.PENDING:\n      return {\n        ...state,\n        comments: [],\n        error: '',\n        isPendingComments: true\n      }\n    case GET_COMMENTS.SUCCESS:\n      return {\n        ...state,\n        comments: [...action.payload, ...state.comments],\n        error: '',\n        isPendingComments: false\n      }\n    case GET_COMMENTS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isPendingComments: false\n      }\n    case CREATE_COMMENT.PENDING:\n      return {\n        ...state,\n        error: ''\n      }\n    case CREATE_COMMENT.SUCCESS:\n      return {\n        ...state,\n        comments: [...action.payload, ...state.comments],\n        error: ''\n      }\n    case CREATE_COMMENT.ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case UPDATE_COMMENT.PENDING:\n      return {\n        ...state,\n        error: ''\n      }\n    case UPDATE_COMMENT.SUCCESS:\n      return {\n        ...state,\n        comments: action.payload,\n        error: ''\n      }\n    case UPDATE_COMMENT.ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case DELETE_COMMENT.PENDING:\n      return {\n        ...state,\n        error: ''\n      }\n    case DELETE_COMMENT.SUCCESS:\n      return {\n        ...state,\n        comments: action.payload,\n        error: ''\n      }\n    case DELETE_COMMENT.ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default commentsReducer\n","import { combineReducers } from 'redux'\n// import storage from 'redux-persist/lib/storage'\nimport postsReducer from './screens/Posts/posts.reducer'\nimport searchReducer from './screens/Search/search.reducer'\nimport usersReducer from './screens/Users/users.reducer'\nimport contestsReducer from './screens/Contests/contests.reducer'\nimport commentsReducer from './screens/Comments/comments.reducer'\n\n// import { authReducer } from 'auth'\n// import { createMomentsReducer } from 'createMoments'\n// import { messagesReducer } from 'messages'\n// import { molsReducer } from 'mols'\n// import { notificationsReducer } from 'notifications'\n// import { roomsReducer } from 'rooms'\n\nconst appReducer = combineReducers({\n  posts: postsReducer,\n  search: searchReducer,\n  users: usersReducer,\n  contests: contestsReducer,\n  comments: commentsReducer\n  /* app’s top-level reducers */\n  // auth: authReducer,\n  // createMoments: createMomentsReducer,\n  // messages: messagesReducer,\n  // mols: molsReducer,\n  // notifications: notificationsReducer,\n  // rooms: roomsReducer\n})\n\nconst rootReducer = (state, action) => {\n  // console.log('action.type: ', action.type)\n  /* if (action.type === 'LOGOUT_PENDING') {\n    Object.keys(state).forEach(key => {\n      storage.removeItem(`persist:${key}`)\n    })\n    state = undefined\n  } */\n  return appReducer(state, action)\n}\n\nexport default rootReducer\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","class DataManager {\n  static setItem (item, data) {\n    sessionStorage.setItem(item, JSON.stringify(data))\n  }\n\n  static getItem (item) {\n    return sessionStorage.getItem(item)\n  }\n\n  static clear () {\n    sessionStorage.clear()\n  }\n}\n\nexport default DataManager\n","import { BatchHttpLink } from 'apollo-link-batch-http'\nimport { createPersistedQueryLink } from 'apollo-link-persisted-queries'\nimport { ApolloLink } from 'apollo-link'\nimport { LoggingLink } from 'apollo-logger'\n// import { toIdValue } from 'apollo-utilities'\n// import { onError } from 'apollo-link-error'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport ApolloClient from 'apollo-client'\nimport Accounts from 'meteor-react-apollo-accounts'\n\nconst isDev = false // __DEV__\n\nconst dataIdFromObject = result => {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`\n    }\n  }\n  return null\n}\n\nconst cache = new InMemoryCache({\n  dataIdFromObject,\n  addTypename: true,\n  cacheRedirects: {\n    Query: {\n      // currentUser: (_, args) => toIdValue(dataIdFromObject({ __typename: 'User', id: args._id })),\n      // getUser: (_, args) => toIdValue(dataIdFromObject({ __typename: 'User', id: args._id }))\n    }\n  }\n})\n\nconst httpLink = createPersistedQueryLink().concat(\n  new BatchHttpLink({ uri: isDev ? 'http://localhost:3000/graphql' : 'https://ryfma.com/graphql' })\n)\n\n// handle network error\n/* const errorLink = onError(({ networkError }) => {\n  if (networkError.statusCode === 401) {\n    // console.log(networkError)\n  }\n  // let errorMessage = networkError.statusCode === 401 ? 'Network error 104, handled' : 'link sucess'\n  // console.log(errorMessage, networkError)\n}) */\n\n// apply widdleware to add access token to request\nlet middlewareLink = new ApolloLink((operation, forward) => {\n  const token = Accounts.getLoginToken()\n  operation.setContext({\n    headers: {\n      'meteor-login-token': token\n    },\n    // Persisted queries\n    http: {\n      includeExtensions: true,\n      includeQuery: false\n    }\n  })\n  return forward(operation)\n})\n\nconst link = middlewareLink.concat(httpLink)\n\nconst logOptions = { logger: console.log }\n\nexport const client = new ApolloClient({\n  link: ApolloLink.from((isDev ? [new LoggingLink(logOptions)] : []).concat([link])),\n  cache\n})\n","import gql from 'graphql-tag'\n\nexport const getLatestPosts = gql`\nquery getLatestPosts($type: String, $userId: String, $albumId: String, $tagId: String, $festId: String, $duration: String, $withImage: Boolean, $personal: Boolean, $keyword: String, $skip: Int, $limit: Int) {\n  posts(type: $type, userId: $userId, albumId: $albumId, tagId: $tagId, festId: $festId, duration: $duration, withImage: $withImage, personal: $personal, keyword: $keyword, skip: $skip, limit: $limit) {\n    _id\n    createdAt\n    postedAt\n    title\n    slug\n    excerpt\n    coverImg\n    videoLink\n    isAdultContent\n    paymentType\n    coins\n    isBought\n    isPromoted\n    isFromRyfmaBlog\n    promo {\n      currentViews\n    }\n    author {\n      _id\n      username\n      roles\n      isFollowing\n      emails {\n        verified\n      }\n      profile {\n        name\n        image\n      }\n    }\n  }\n}\n`\n\nexport const getPostData = gql`\n  query getPostData($postId: ID!) {\n    getPost(postId: $postId) {\n      _id\n      postedAt\n      title\n      slug\n      htmlBody\n      excerpt\n      paymentType\n      coins\n      viewCount\n      lastCommentedAt\n      clickCount\n      status\n      sticky\n      userId\n      coverImg\n      videoLink\n      videoId\n      tags {\n        _id\n        name\n      }\n      fests\n      albumId\n      isCertified\n      isAdultContent\n      isFromRyfmaBlog\n    }\n  }\n`\n\nexport const getPostInfo = gql`\n  query getPostInfo($postId: ID!) {\n    getPost(postId: $postId) {\n      _id\n      createdAt\n      postedAt\n      title\n      slug\n      excerpt\n      htmlBody\n      likeCount\n      liked\n      currUserLikes\n      viewCount\n      savedCount\n      saved\n      commentsCount\n      userId\n      coverImg\n      videoLink\n      fests\n      paymentType\n      coins\n      isBought\n      isCertified\n      isAdultContent\n      album {\n        _id\n        title\n        slug\n      }\n      tags {\n        _id\n        name\n        slug\n      }\n      author {\n        _id\n        username\n        isFollowing\n        coins\n        roles\n        emails {\n          verified\n        }\n        profile {\n          name\n          image\n          twitterUser\n        }\n      }\n    }\n  }\n`\n\nexport const getPromotion = gql`\n  query getPromotion {\n    getPromotion {\n      _id\n      totalViews\n      currentViews\n      post {\n        _id\n        createdAt\n        postedAt\n        title\n        slug\n        excerpt\n        coverImg\n        videoLink\n        author {\n          _id\n          username\n          roles\n          isFollowing\n          emails {\n            verified\n          }\n          profile {\n            name\n            image\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const likePost = gql`\n  mutation likePost(\n    $_id: ID!\n    $title: String!\n    $userId: String!\n    $likes: Int!\n    $totalLikes: Int!\n  ) {\n    likePost(\n      _id: $_id\n      title: $title\n      userId: $userId\n      likes: $likes\n      totalLikes: $totalLikes\n    )\n  }\n`\n\nexport const unSavePost = gql`\n  mutation unSavePost($_id: ID!, $userId: String!) {\n    unSavePost(_id: $_id, userId: $userId)\n  }\n`\n\nexport const savePost = gql`\n  mutation savePost($_id: ID!, $title: String!, $userId: String!) {\n    savePost(_id: $_id, title: $title, userId: $userId)\n  }\n`\n\nexport const increasePostViewCount = gql`\n  mutation increasePostViewCount($_id: ID!) {\n    increasePostViewCount(_id: $_id)\n  }\n`\n\nexport const allowAdultContent = gql`\n  mutation allowAdultContent {\n    allowAdultContent\n  }\n`\n\nexport const followUser = gql`\n  mutation followUser($_id: ID!) {\n    followUser(\n      _id: $_id\n    )\n  }\n`\n\nexport const getRelatedPosts = gql`\n  query getRelatedPosts($postId: ID!, $tags: [String]) {\n    relatedPosts(postId: $postId, tags: $tags) {\n      _id\n      createdAt\n      postedAt\n      title\n      coverImg\n      slug\n      excerpt\n      tags {\n        _id\n        name\n        slug\n      }\n      author {\n        _id\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const getPostLikers = gql`\n  query getPostLikers($postId: ID!, $festId: String, $skip: Int, $limit: Int) {\n    getPostLikers(postId: $postId, festId: $festId, skip: $skip, limit: $limit)\n  }\n`\n\nexport const insertPost = gql`\n  mutation insertPost(\n    $title: String!,\n    $slug: String!,\n    $htmlBody:  String!,\n    $excerpt: String!,\n    $paymentType: Int,\n    $coins: Int,\n    $status: String!,\n    $sticky: Boolean,\n    $coverImg: String,\n    $videoLink: String,\n    $tags: [String]!,\n    $albumId: String,\n    $isFromRyfmaBlog: Boolean\n    $isCertified: Boolean\n    $isAdultContent: Boolean\n  ) {\n    insertPost(\n      title: $title,\n      slug: $slug,\n      htmlBody: $htmlBody,\n      paymentType: $paymentType,\n      coins: $coins,\n      excerpt: $excerpt,\n      status: $status,\n      sticky: $sticky,\n      coverImg: $coverImg,\n      videoLink: $videoLink,\n      tags: $tags,\n      albumId: $albumId,\n      isFromRyfmaBlog: $isFromRyfmaBlog,\n      isCertified: $isCertified,\n      isAdultContent: $isAdultContent\n    ){\n      _id\n    }\n  }\n`\n\nexport const deletePost = gql`\n  mutation deletePost($_id: ID!) {\n    deletePost(\n      _id: $_id\n    )\n  }\n`\n\nexport const updatePost = gql`\n  mutation updatePost(\n    $_id: ID!,\n    $title: String!,\n    $slug: String!,\n    $htmlBody:  String!,\n    $excerpt: String!,\n    $paymentType: Int,\n    $coins: Int,\n    $status: String!,\n    $sticky: Boolean,\n    $coverImg: String,\n    $videoLink: String,\n    $tags: [String]!,\n    $albumId: String,\n    $oldAlbumId: String,\n    $isFromRyfmaBlog: Boolean\n    $isAdultContent: Boolean\n    $isCertified: Boolean\n  ) {\n    updatePost(\n      _id: $_id,\n      title: $title,\n      slug: $slug,\n      htmlBody: $htmlBody,\n      excerpt: $excerpt,\n      paymentType: $paymentType,\n      coins: $coins,\n      status: $status,\n      sticky: $sticky,\n      coverImg: $coverImg,\n      videoLink: $videoLink,\n      tags: $tags,\n      albumId: $albumId,\n      oldAlbumId: $oldAlbumId,\n      isFromRyfmaBlog: $isFromRyfmaBlog,\n      isCertified: $isCertified,\n      isAdultContent: $isAdultContent\n    )\n  }\n`\n","import { client } from '../../ApolloClient'\nimport { getLatestPosts, getPostInfo } from '../../api/Post'\n\nimport {\n  GET_POSTS,\n  GET_POSTS_CONTENTS\n} from './posts.type'\n\nexport const getPosts = ({type, userId, albumId, tagId, festId, withImage, duration, personal, keyword, skip, limit, force, replaceFeed}) => {\n  return (dispatch, getState) => {\n    console.log('New action!')\n    console.log('replaceFeed: ', replaceFeed)\n    dispatch({ type: GET_POSTS.PENDING, replaceFeed })\n\n    return client.query({\n      query: getLatestPosts,\n      variables: {\n        type,\n        userId,\n        albumId,\n        tagId,\n        festId,\n        withImage,\n        duration,\n        personal,\n        keyword,\n        skip,\n        limit\n      },\n      fetchPolicy: force ? 'network-only' : 'cache-first'\n    })\n    .then(data => {\n      dispatch({\n        type: GET_POSTS.SUCCESS,\n        payload: data.data.posts,\n        replaceFeed,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_POSTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getPostContents = ({postId}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_POSTS_CONTENTS.PENDING })\n\n    return client.query({\n      skip: !postId,\n      query: getPostInfo,\n      variables: {\n        postId: postId\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_POSTS_CONTENTS.SUCCESS,\n        payload: data.data.getPost\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_POSTS_CONTENTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Spinner } from '@vkontakte/vkui'\n\nclass Loader extends Component {\n  render () {\n    return (<Spinner />)\n  }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport { Group, Div, Avatar, Cell, Link } from '@vkontakte/vkui'\nimport './styles.css'\n\nclass PostsListItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  render () {\n    const { post } = this.props\n    if (!post.author) return null\n    const excerpt = post.excerpt// .replace(/<br\\s*\\/>/gi, '\\n\\r').replace(/<p>/gi, '').replace(/<\\/p>/gi, '')\n    return (<Group id={post._id} className='post-list-item'>\n      <Cell\n        size='l'\n        description={'от ' + post.author.profile.name}\n        before={<Avatar size={36} src={post.author.profile.image} />}\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        {post.title}\n      </Cell>\n      <Div\n        className='content'\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        {post.coverImg && <Avatar type='image' src={post.coverImg} className='post-image' />}\n        <div dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </Div>\n      <Cell\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        <Link onClick={this.goToPost}>Читать далее</Link>\n      </Cell>\n    </Group>)\n  }\n}\n\nexport default PostsListItem\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst EmptyPosts = ({goToFunc}) => (\n  <Group>\n    <Cell>\n    Лента пуста\n    </Cell>\n  </Group>\n)\n\nexport default EmptyPosts\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getPosts } from '../posts.action'\nimport Loader from '../../../components/Loader'\nimport PostsListItem from './PostsListItem'\nimport EmptyPosts from './EmptyPosts'\n\nimport { Group, HorizontalScroll, Tabs, TabsItem, List, Button, Div } from '@vkontakte/vkui'\n\nclass PostsList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      posts: [],\n      activeTab: 'latest',\n      lastType: props.type,\n      duration: props.duration\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount')\n    console.log('props: ', this.props)\n    const { type, userId, albumId, tagId, festId, withImage, duration, personal, keyword, skip, limit, force, replaceFeed } = this.props\n    this.props.getPosts({\n      type, userId, albumId, tagId, festId, withImage, duration, personal, keyword, skip, limit, force, replaceFeed\n    })\n  }\n\n  fetchMorePosts = ({ activeTab, replaceFeed, skip }) => () => {\n    const { userId, albumId, tagId, festId, withImage, duration, personal, keyword, limit } = this.props\n    this.props.getPosts({\n      type: activeTab,\n      userId,\n      albumId,\n      tagId,\n      festId,\n      withImage,\n      duration,\n      personal,\n      keyword,\n      force: true,\n      replaceFeed,\n      skip,\n      limit\n    })\n    if (activeTab) this.setState({ activeTab })\n  }\n\n  render () {\n    const { posts, isPendingPosts, type, userId, personal } = this.props\n\n    const userTabs = <Group>\n      <Tabs type='buttons'>\n        <HorizontalScroll>\n          <TabsItem\n            onClick={this.fetchMorePosts({ activeTab: 'latest', replaceFeed: true, skip: 0 })}\n            selected={this.state.activeTab === 'latest'}\n          >\n            Последние\n          </TabsItem>\n          <TabsItem\n            onClick={this.fetchMorePosts({ activeTab: 'popular', replaceFeed: true, skip: 0 })}\n            selected={this.state.activeTab === 'popular'}\n          >\n            Популярные\n          </TabsItem>\n          <TabsItem\n            onClick={this.fetchMorePosts({ activeTab: 'viewed', replaceFeed: true, skip: 0 })}\n            selected={this.state.activeTab === 'viewed'}\n          >\n            Читаемые\n          </TabsItem>\n          <TabsItem\n            onClick={this.fetchMorePosts({ activeTab: 'commented', replaceFeed: true, skip: 0 })}\n            selected={this.state.activeTab === 'commented'}\n          >\n            Комментируемые\n          </TabsItem>\n        </HorizontalScroll>\n      </Tabs>\n    </Group>\n\n    const activeTabs = (<Tabs theme=\"light\">\n      <TabsItem\n        onClick={this.fetchMorePosts({ activeTab: 'day', replaceFeed: true })}\n        selected={this.state.activeTab === 'day'}\n      >\n        За день\n      </TabsItem>\n      <TabsItem\n        onClick={this.fetchMorePosts({ activeTab: 'week', replaceFeed: true })}\n        selected={this.state.activeTab === 'week'}\n      >\n        За неделю\n      </TabsItem>\n      <TabsItem\n        onClick={this.fetchMorePosts({ activeTab: 'month', replaceFeed: true })}\n        selected={this.state.activeTab === 'month'}\n      >\n        За месяц\n      </TabsItem>\n    </Tabs>)\n\n    return (<Group>\n      {type === 'popular' && activeTabs}\n      {userId && personal && userTabs}\n      {(!posts || posts.length === 0) && <EmptyPosts />}\n      {isPendingPosts && <Loader />}\n      <List>\n        {posts.map(post =>\n          <PostsListItem\n            key={post._id}\n            post={post}\n            go={this.props.go}\n          />\n        )}\n        <Div>\n          <Button size=\"xl\" level=\"secondary\" onClick={this.fetchMorePosts({ activeTab: this.state.activeTab, replaceFeed: false, skip: this.state.posts.length })}>Загрузить еще</Button>\n        </Div>\n      </List>\n    </Group>)\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    posts: state.posts.posts,\n    isPendingPosts: state.posts.isPendingPosts\n\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getPosts\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsList)\n","import gql from 'graphql-tag'\n\nexport const searchPosts = gql`\n  query searchPosts($keyword: String!) {\n    searchPosts(\n      keyword: $keyword\n    ) {\n      _id\n      title\n      coverImg\n    }\n  }\n`\n\nexport const searchPostsFull = gql`\n  query searchPosts($keyword: String!, $limit: Int) {\n    searchPosts(keyword: $keyword, limit: $limit) {\n      _id\n      createdAt\n      title\n      slug\n      htmlBody\n      excerpt\n      viewCount\n      lastCommentedAt\n      clickCount\n      status\n      sticky\n      userId\n      coverImg\n      author {\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const searchUsers = gql`\n  query searchUsers($keyword: String!) {\n    searchUsers(keyword: $keyword) {\n      _id\n      username\n      profile {\n        name\n        image\n      }\n    }\n  }\n`\n\nexport const searchUsersFull = gql`\n  query searchUsers($keyword: String!, $limit: Int) {\n    searchUsers(keyword: $keyword, limit: $limit) {\n      _id\n      username\n      isFollowing\n      roles\n      profile {\n        name\n        bio\n        image\n      }\n    }\n  }\n`\n\nexport const searchTags = gql`\n  query searchTags($keyword: String!) {\n    searchTags(\n      keyword: $keyword\n    ) {\n      name\n    }\n  }\n`\n\nexport const searchTagsFull = gql`\n  query searchTags($keyword: String!) {\n    searchTags(\n      keyword: $keyword\n    ) {\n      name\n      count\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const getCurrentUser = gql`\n  query getCurrentUser {\n    me {\n      _id\n      username\n      roles\n      coins\n      rooms\n      emails {\n        address\n        verified\n      }\n      profile {\n        name\n        firstname\n        lastname\n        gender\n        birthday\n        locationStr\n        unreadNotifications\n        image\n        bio\n      }\n      stats {\n        postsCount\n        followersCount\n        followingCount\n        sellingCount\n        soldCount\n        boughtCount\n      }\n    }\n  }\n`\n\nexport const getUser = gql`\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      _id\n      username\n      isFollowing\n      roles\n      coins\n      emails {\n        verified\n      }\n      roomId\n      isClassic\n      tariffs\n      currency\n      profile {\n        name\n        firstname\n        lastname\n        bio\n        city\n        website\n        twitterUser\n        instagramUser\n        vkUser\n        facebookUser\n        invitesCount\n        image\n        karma\n        badges {\n          url\n          image\n          desc\n        }\n      }\n      stats {\n        postsCount\n        albumsCount\n        booksCount\n        followersCount\n        followingCount\n        bookshelvesCount\n        savedCount\n        strikeCount\n        strikePostsCount\n        levitanDownloads\n      }\n    }\n  }\n`\n\nexport const getPaidUsersFull = gql`\n  query getPaidUsersFull ($duration: Int, $limit: Int) {\n    getPaidUsersFull (duration: $duration, limit: $limit) {\n      _id\n      username\n      roles\n      isFollowing\n      emails {\n        verified\n      }\n      profile {\n        name\n        image\n        bio\n      }\n      stats {\n        postsCount\n        followersCount\n      }\n    }\n  }\n`\n\nexport const getFollowers = gql`\n  query getFollowers($username: String!, $skip: Int, $limit: Int) {\n    getFollowers(username: $username, skip: $skip, limit: $limit) {\n      _id\n      username\n      isFollowing\n      roles\n      coins\n      profile {\n        name\n        bio\n        image\n      }\n    }\n  }\n`\n\nexport const getFollowing = gql`\n  query getFollowing($username: String!, $skip: Int, $limit: Int) {\n    getFollowing(username: $username, skip: $skip, limit: $limit) {\n      _id\n      username\n      isFollowing\n      roles\n      coins\n      profile {\n        name\n        bio\n        image\n      }\n    }\n  }\n`\n\nexport const getSavedPosts = gql`\n  query getSaved($sortType: String, $userId: String, $albumId: String, $tagId: String) {\n    getSaved(sortType: $sortType, userId: $userId, albumId: $albumId, tagId: $tagId) {\n      _id\n      createdAt\n      title\n      slug\n      excerpt\n      coverImg\n      author {\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const saveProfile = gql`\n  mutation saveProfile(\n    $firstname: String,\n    $lastname: String,\n    $gender: String,\n    $birthday: String,\n    $locationStr: String,\n    $bio: String,\n  ) {\n    saveProfile(\n      firstname: $firstname,\n      lastname: $lastname,\n      gender: $gender,\n      birthday: $birthday,\n      locationStr: $locationStr,\n      bio: $bio,\n    )\n  }\n`\n\nexport const saveSettings = gql`\n  mutation saveSettings(\n    $username: String,\n    $email: String,\n    $password: String\n  ) {\n    saveSettings(\n      username: $username,\n      email: $email,\n      password: $password,\n    )\n  }\n`\n\nexport const changeUserAvatar = gql`\n  mutation changeUserAvatar(\n    $avatarUrl: String!,\n  ) {\n    changeUserAvatar(\n      avatarUrl: $avatarUrl,\n    )\n  }\n`\n\nexport const followUser = gql`\n  mutation followUser($_id: ID!) {\n    followUser(\n      _id: $_id\n    )\n  }\n`\n\nexport const unFollowUser = gql`\n  mutation unFollowUser($_id: ID!) {\n    unFollowUser(\n      _id: $_id\n    )\n  }\n`\n\nexport const checkIfUsernameExists = gql`\n  mutation checkIfUsernameExists($username: String!) {\n    checkIfUsernameExists(\n      username: $username\n    )\n  }\n`\n\nexport const checkIfEmailExists = gql`\n  mutation checkIfEmailExists($email: String!) {\n    checkIfEmailExists(\n      email: $email\n    )\n  }\n`\n\nexport const createDeposit = gql`\n  mutation createDeposit($depositType: Int!, $totalSum: Int!, $status: Int!, $comment: String) {\n    createDeposit (\n      depositType: $depositType,\n      totalSum: $totalSum,\n      status: $status,\n      comment: $comment\n    )\n  }\n`\n\nexport const createPayout = gql`\n  mutation createPayout($payoutType: Int!, $totalSum: Int!, $status: Int!, $comment: String) {\n    createPayout (\n      payoutType: $payoutType,\n      totalSum: $totalSum,\n      status: $status,\n      comment: $comment\n    )\n  }\n`\n","import { client } from '../../ApolloClient'\nimport { searchPostsFull, searchUsersFull, searchTagsFull } from '../../api/Search'\nimport { getLatestPosts } from '../../api/Post'\nimport { getPaidUsersFull } from '../../api/User'\n\nimport {\n  SEARCH_POSTS,\n  SEARCH_USERS,\n  SEARCH_TAGS\n} from './search.type'\n\nexport const searchTags = ({keyword}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: SEARCH_TAGS.PENDING })\n    console.log('searchTags: ', keyword)\n    return client.query({\n      query: searchTagsFull,\n      variables: {\n        keyword: keyword,\n        limit: 10\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: SEARCH_TAGS.SUCCESS,\n        payload: data.data.searchTags,\n        keyword: keyword,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: SEARCH_TAGS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const searchPosts = ({ keyword, skip, limit }) => {\n  return (dispatch, getState) => {\n    dispatch({ type: SEARCH_POSTS.PENDING })\n    console.log('searchPosts: ', keyword)\n\n    return client.query({\n      query: searchPostsFull,\n      variables: {\n        keyword,\n        skip,\n        limit\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: SEARCH_POSTS.SUCCESS,\n        payload: data.data.searchPosts,\n        keyword,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: SEARCH_POSTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const searchPostsByTag = ({tagId}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: SEARCH_POSTS.PENDING })\n\n    return client.query({\n      query: getLatestPosts,\n      variables: {\n        type: 'latest',\n        tagId: tagId,\n        limit: 10\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: SEARCH_POSTS.SUCCESS,\n        payload: data.data.posts,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: SEARCH_POSTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const searchUsers = ({ keyword, skip, limit }) => {\n  return (dispatch, getState) => {\n    dispatch({ type: SEARCH_USERS.PENDING })\n    console.log('searchUsers: ', keyword)\n\n    return client.query({\n      query: searchUsersFull,\n      variables: {\n        keyword,\n        skip,\n        limit\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: SEARCH_USERS.SUCCESS,\n        payload: data.data.searchUsers,\n        keyword,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: SEARCH_USERS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n","import { client } from '../../ApolloClient'\nimport { getLatestPosts } from '../../api/Post'\nimport { getFollowers, getFollowing, getUser, followUser, unFollowUser, getPaidUsersFull } from '../../api/User'\n\nimport {\n  GET_USER_INFO,\n  GET_USER_POSTS,\n  GET_FOLLOWERS,\n  GET_FOLLOWING,\n  GET_PAID_USERS,\n  FOLLOW,\n  UNFOLLOW\n} from './users.type'\n\nexport const getUserInfo = ({username, force}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_USER_INFO.PENDING })\n\n    return client.query({\n      skip: !username,\n      query: getUser,\n      variables: {\n        username: username\n      },\n      fetchPolicy: force ? 'network-only' : 'cache-first'\n    })\n    .then(data => {\n      dispatch({\n        type: GET_USER_INFO.SUCCESS,\n        payload: data.data.getUser,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_USER_INFO.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getUserPosts = ({type, subtype, userId, tagId, duration}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_USER_POSTS.PENDING })\n\n    return client.query({\n      query: getLatestPosts,\n      variables: {\n        type: type,\n        subtype: subtype,\n        userId: userId,\n        tagId: tagId,\n        duration: duration,\n        limit: 10\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_USER_POSTS.SUCCESS,\n        payload: data.data.posts,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_USER_POSTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getUserFollowers = ({username}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_FOLLOWERS.PENDING })\n\n    return client.query({\n      skip: !username,\n      query: getFollowers,\n      variables: {\n        username: username,\n        skip: 0,\n        limit: 15\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_FOLLOWERS.SUCCESS,\n        payload: data.data.getFollowers\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_FOLLOWERS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getUserFollowing = ({username}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_FOLLOWING.PENDING })\n\n    return client.query({\n      skip: !username,\n      query: getFollowing,\n      variables: {\n        username: username,\n        skip: 0,\n        limit: 15\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_FOLLOWING.SUCCESS,\n        payload: data.data.getFollowing\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_FOLLOWING.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getPaidUsers = ({duration, skip, limit}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_PAID_USERS.PENDING })\n\n    return client.query({\n      query: getPaidUsersFull,\n      variables: {\n        duration,\n        skip,\n        limit\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_PAID_USERS.SUCCESS,\n        payload: data.data.getPaidUsersFull\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_PAID_USERS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const follow = ({_id}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: FOLLOW.PENDING })\n\n    return client.mutate({\n      skip: !_id,\n      mutation: followUser,\n      variables: {\n        _id: _id\n      }\n    })\n    .then(data => {\n      console.log(data)\n      /* dispatch({\n        type: FOLLOW.SUCCESS,\n        payload: data.data.followUser,\n      }) */\n    })\n    .catch(error => {\n      console.log(error)\n      /* dispatch({\n        type: FOLLOW.ERROR,\n        payload: error.message,\n      }) */\n    })\n  }\n}\n\nexport const unfollow = ({_id}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: UNFOLLOW.PENDING })\n\n    return client.mutate({\n      skip: !_id,\n      mutation: unFollowUser,\n      variables: {\n        _id: _id\n      }\n    })\n    .then(data => {\n      console.log(data)\n      /* dispatch({\n        type: UNFOLLOW.SUCCESS,\n        payload: data.data.followUser,\n      }) */\n    })\n    .catch(error => {\n      console.log(error)\n      /* dispatch({\n        type: UNFOLLOW.ERROR,\n        payload: error.message,\n      }) */\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Avatar, Cell, Button } from '@vkontakte/vkui'\n\nclass UsersInfoItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  goToUser = (e) => {\n    console.log('Go to user', this.props.user)\n    console.log('Event data: ', e)\n    this.props.go(e)\n  }\n\n  followUser = () => {\n\n  }\n\n  unFollowUser = () => {\n\n  }\n\n  render () {\n    const { user } = this.props\n    let avatar = user.profile.image || 'https://cdn.ryfma.com/defaults/icons/default_full_avatar.jpg'\n    if (avatar.indexOf('_full_') > 0) {\n      avatar = avatar.replace('_full_', `_medium_`)\n    } else if (avatar.indexOf('graph.facebook.com') > 0) {\n      avatar = avatar.replace('=large', '=square')\n    }\n\n    /* asideContent={user.isFollowing ?\n      <Button onClick={this.unFollowUser}>Отписаться</Button>\n      :\n      <Button onClick={this.followUser}>Читать</Button>} */\n\n    return (<Cell\n      id={user._id}\n      className='user-info-item'\n      before={<Avatar size={36} src={user.profile.image} />}\n      description={user.profile.bio}\n      onClick={this.goToUser}\n      data-view='userpage'\n      data-panel='userpage'\n      data-userid={user._id}\n      data-username={user.username}\n      data-headertitle={user.profile.name}\n    >\n      {user.profile.name}\n    </Cell>)\n  }\n}\n\nexport default UsersInfoItem\n","import React, { Component } from 'react'\nimport { Div, Avatar, Button, Cell } from '@vkontakte/vkui'\n\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite'\nimport Icon24Users from '@vkontakte/icons/dist/24/users'\nimport Icon24Copy from '@vkontakte/icons/dist/24/copy'\n\nimport './styles.css'\n\nclass UsersInfoItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  goToUser = () => {\n    \n  }\n\n  followUser = () => {\n    \n  }\n\n  unFollowUser = () => {\n    \n  }\n\n  render () {\n    const { user } = this.props\n    let avatar = user.profile.image || 'https://cdn.ryfma.com/defaults/icons/default_full_avatar.jpg'\n    if (avatar.indexOf('_full_') > 0) {\n      avatar = avatar.replace('_full_', `_medium_`)\n    } else if (avatar.indexOf('graph.facebook.com') > 0) {\n      avatar = avatar.replace('=large', '=square')\n    }\n\n    const itsme = false // currUserId === user._id\n    const isShortBio = true\n    let shortBio = user.profile.bio || ''\n    if (isShortBio) {\n      shortBio = shortBio.length > 40 ? shortBio.substr(0, 40) + '...' : shortBio\n    } else {\n      shortBio = shortBio.length > 160 ? shortBio.substr(0, 160) + '...' : shortBio\n    }\n\n    let followButton = null\n\n    if (user.isFollowing) {\n      followButton = <Button\n        size='l'\n        className='ui gray basic button follow'\n        onClick={this.unFollowUser}\n        style={{ marginTop: 8 }}\n      >\n        Отписаться\n      </Button>\n    } else {\n      followButton = <Button\n        size='l'\n        className='ui green button follow'\n        onClick={this.followUser}\n        style={{ marginTop: 8 }}\n      >\n        Читать\n      </Button>\n    }\n\n    if (itsme) {\n      followButton = null\n    }\n\n    followButton = null\n    return (<Div\n      id={user._id} style={{ textAlign: 'center', marginTop: 8 }}\n      className='user-info-item'\n    >\n      <Avatar\n        size={80}\n        src={user.profile.image}\n        style={{ margin: '0 auto' }}\n        onClick={this.props.go}\n        data-view='userpage'\n        data-panel='userpage'\n        data-userid={user._id}\n        data-username={user.username}\n        data-headertitle={user.profile.name}\n      >\n        <Icon24Favorite fill='#FFFFFF' />\n      </Avatar>\n      <h2\n        style={{ marginBottom: '8px' }}\n        onClick={this.props.go}\n        data-view='userpage'\n        data-panel='userpage'\n        data-userid={user._id}\n        data-username={user.username}\n        data-headertitle={user.profile.name}\n      >\n        {user.profile.name}\n      </h2>\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '12px' }}>\n        <span style={{ margin: '0 8px' }}>\n          <Icon24Copy />\n          {user.stats.postsCount}\n        </span>\n        <span style={{ margin: '0 8px' }}>\n          <Icon24Users />\n          {user.stats.followersCount}\n        </span>\n      </div>\n      <Cell multiline>\n        {shortBio}\n      </Cell>\n      {followButton}\n    </Div>)\n  }\n}\n\nexport default UsersInfoItem\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst EmptySearch = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      Ничего не найдено. Попробуйте изменить запрос\n    </Cell>\n  </Group>\n)\n\nexport default EmptySearch\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { searchPosts, searchUsers } from '../search.action'\nimport { getPaidUsers } from '../../Users/users.action'\nimport Loader from '../../../components/Loader'\nimport PostsListItem from '../../Posts/views/PostsListItem'\nimport UsersInfoItem from '../../Users/views/UsersInfoItem'\nimport UsersInfoVerticalItem from '../../Users/views/UsersInfoVerticalItem'\nimport EmptySearch from './EmptySearch'\n\nimport { FixedLayout, Group, List, Div, Button, Search, Tabs, TabsItem } from '@vkontakte/vkui'\n\nclass SearchPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      keyword: '',\n      activeTab: 'users',\n      searchResult: []\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount')\n    this.props.getPaidUsers({})\n  }\n\n  handleSearch = (keyword, activeTab) => {\n    const currTab = activeTab ? activeTab : this.state.activeTab\n    if (keyword) {\n      if (currTab === 'posts') {\n        this.props.searchPosts({\n          keyword,\n          limit: 24\n        })\n      } else if (currTab === 'users') {\n        this.props.searchUsers({\n          keyword,\n          limit: 24\n        })\n      }\n    }\n  }\n\n  changeTab = (activeTab) => () => {\n    const { keyword } = this.state\n    this.setState({ activeTab })\n    this.handleSearch(keyword, activeTab)\n  }\n\n  onChange = (search) => {\n    const { activeTab } = this.state\n    this.setState({ keyword: search })\n    this.handleSearch(search, activeTab)\n  }\n\n  fetchMorePosts = (activeTab) => {\n    const { posts } = this.props\n    this.props.searchPosts({\n      skip: posts.length,\n      limit: 15\n    })\n  }\n\n  fetchMoreUsers = (activeTab) => {\n    const { users } = this.props\n    this.props.searchUsers({\n      skip: users.length,\n      limit: 15\n    })\n  }\n\n  render () {\n    const { posts, users, paidUsers, isPendingPosts, isPendingUsers, isPendingPaidUsers } = this.props\n    const { keyword, activeTab } = this.state\n    return (\n      <div>\n        <FixedLayout vertical='top'>\n          <Search value={this.state.search} onChange={this.onChange} />\n        </FixedLayout>\n        {!keyword && <div className='paid-users' style={{ marginTop: 56 }}>\n          <Group title='Рекомендуем подписаться'>\n            {paidUsers.map(user => {\n              return (<UsersInfoVerticalItem user={user} go={this.props.go} />)\n            })}\n          </Group>\n          <div className='get-started-block'>\n            <h3>Публикуй свое творчество</h3>\n            <p>Создание и публикация своих произведений на Ryfma бесплатна</p>\n            <Button size=\"l\">Давайте начнем</Button>\n          </div>\n        </div>}\n        {keyword && <Tabs theme=\"light\" style={{ marginTop: 56 }}>\n          <TabsItem\n            onClick={this.changeTab('users')}\n            selected={activeTab === 'users'}\n          >\n            Авторы\n          </TabsItem>\n          <TabsItem\n            onClick={this.changeTab('posts')}\n            selected={activeTab === 'posts'}\n          >\n            Посты\n          </TabsItem>\n        </Tabs>}\n\n        {(isPendingUsers || isPendingPosts) && <Loader />}\n\n        {users.length === 0 && activeTab === 'users' && keyword && <EmptySearch />}\n        {posts.length === 0 && activeTab === 'posts' && keyword && <EmptySearch />}\n\n        {users.length > 0 && activeTab === 'users' &&\n          <List>\n            {users.map(user => (<Div className='user-info-wrapper'>\n              <UsersInfoItem key={user._id} user={user} go={this.props.go} />\n            </Div>)\n            )}\n            <Div>\n              <Button size=\"xl\" level=\"secondary\" onClick={this.fetchMoreUser}>Загрузить еще</Button>\n            </Div>\n          </List>\n        }\n\n        {posts.length > 0 && activeTab === 'posts' &&\n          <List>\n            {posts.map(post => <PostsListItem key={post._id} post={post} go={this.props.go} />)}\n            <Div>\n              <Button size=\"xl\" level=\"secondary\" onClick={this.fetchMorePosts}>Загрузить еще</Button>\n            </Div>\n          </List>\n        }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    posts: state.search.posts,\n    users: state.search.users,\n    paidUsers: state.users.paidUsers,\n    isPendingPosts: state.search.isPendingPosts,\n    isPendingUsers: state.search.isPendingUsers,\n    isPendingPaidUsers: state.users.isPendingPaidUsers\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    searchPosts,\n    searchUsers,\n    getPaidUsers\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import gql from 'graphql-tag'\n\nexport const getFestivals = gql`\n  query getFestivals(\n    $keyword: String,\n    $genreType: String,\n    $sortType: String,\n    $location: String,\n    $skip: Int,\n    $limit: Int\n    $isDuel: Boolean\n  ) {\n    getFestivals(\n      keyword: $keyword,\n      genreType: $genreType,\n      sortType: $sortType,\n      location: $location,\n      skip: $skip,\n      limit: $limit,\n      isDuel: $isDuel\n    ) {\n      _id\n      title\n      slug\n      brief\n      description\n      fromDate\n      toDate\n      sticky\n      coverImg\n      genres\n      entryFee\n      topPrize\n      extraPrize\n      countries\n      author {\n        _id\n        username\n        profile {\n          name\n          image\n        }\n      }\n      usersData {\n        _id\n        username\n        profile {\n          image\n        }\n      }\n      stats {\n        usersCount\n      }\n    }\n  }\n`\n\nexport const getContest = gql`\n  query getContest($slug: String, $festId: String) {\n    getContest(slug: $slug, festId: $festId) {\n      _id\n      ownerId\n      seoTitle\n      title\n      slug\n      brief\n      description\n      fromDate\n      toDate\n      acceptDate\n      sticky\n      coverImg\n      genres\n      entryFee\n      vkGroupLink\n      vkEventLink\n      fbGroupLink\n      topPrize\n      extraPrize\n      noJury\n      isFestival\n      isDuel\n      countries\n      levels\n      currentLevel\n      author {\n        _id\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n      usersData {\n        _id\n        username\n        roles\n        profile {\n          image\n          name\n        }\n      }\n      cities {\n        name\n        coordinates\n        partners {\n          name\n          brief\n          logoLink\n          url\n          images\n        }\n      }\n      curatorsData {\n        _id\n        username\n        profile {\n          name\n          image\n          city\n          vkUser\n        }        \n      }\n      juryData {\n        _id\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n      partners {\n        name\n        brief\n        logoLink\n        url\n        images\n      }\n      stats {\n        juryCount\n        countryCount\n        citiesCount\n        usersCount\n      }\n      comments {\n        _id\n        createdAt\n        postedAt\n        content\n        objectType\n        objectId\n        userId\n        author {\n          _id\n          username\n          roles\n          emails {\n            verified\n          }\n          profile {\n            name\n            image\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const getFestPosts = gql`\n  query getFestPosts($festId: String!, $keyword: String, $city: String, $filterType: String, $sortType: String, $level: Int, $skip: Int, $limit: Int) {\n    festPosts(festId: $festId, keyword: $keyword, city: $city, filterType: $filterType, sortType: $sortType, level: $level, skip: $skip, limit: $limit) {\n      _id\n      festId\n      postId\n      userId\n      city\n      likeCount\n\n      author {\n        _id\n        username\n        roles\n        profile {\n          name\n          image\n        }\n      }\n\n      post {\n        _id\n        createdAt\n        title\n        slug\n        excerpt\n        htmlBody\n        coverImg\n        likeCount\n        liked\n        currUserLikes\n        commentsCount\n        userId\n        isAdultContent\n      }\n\n      juryStats {\n        userId\n        rating\n      }\n\n      stats {\n        juryCount\n        juryAverage\n        juryTotal\n      }\n    }\n  }\n`\n","import { client } from '../../ApolloClient'\nimport { getContest, getFestivals, getFestPosts } from '../../api/Contest'\n\nimport {\n  GET_CONTESTS,\n  GET_CONTEST_INFO,\n  GET_CONTEST_POSTS\n} from './contests.type'\n\nexport const getContestInfo = ({ slug, festId }) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_CONTEST_INFO.PENDING })\n\n    return client.query({\n      query: getContest,\n      variables: {\n        slug,\n        festId\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_CONTEST_INFO.SUCCESS,\n        payload: data.data.getContest,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_CONTEST_INFO.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getFestivalsInfo = ({ keyword, genreType, sortType, location, skip, limit, isDuel }) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_CONTESTS.PENDING })\n\n    return client.query({\n      query: getFestivals,\n      variables: {\n        keyword,\n        genreType,\n        sortType,\n        location,\n        skip,\n        limit,\n        isDuel\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_CONTESTS.SUCCESS,\n        payload: data.data.getFestivals,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_CONTESTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const getFestPostsInfo = ({ festId, keyword, city, filterType, sortType, level, skip, limit }) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_CONTEST_POSTS.PENDING })\n\n    return client.query({\n      query: getFestPosts,\n      variables: {\n        festId, keyword, city, filterType, sortType, level, skip, limit\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_CONTEST_POSTS.SUCCESS,\n        payload: data.data.festPosts,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_CONTEST_POSTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Div, Avatar, Link, Button } from '@vkontakte/vkui'\n\nclass ContestsItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      \n    }\n  }\n\n  viewContest = () => {\n    this.props.go()\n  }\n\n  render () {\n    const { contest } = this.props\n    let avatar = contest.coverImg || 'https://cdn.ryfma.com/defaults/icons/default_full_avatar.jpg'\n    return (<Div\n      id={contest._id}\n      onClick={this.props.go}\n      data-view='contestpage'\n      data-panel='contestpage'\n      data-contestid={contest._id}\n      data-contestslug={contest.slug}\n      data-headertitle={contest.title}\n    >\n      <img src={avatar} style={{ width: '100%', borderRadius: '6px' }} />\n      <h1 style={{ marginBottom: 0 }}>{contest.title}</h1>\n      <div><Link>{contest.author.profile.name}</Link></div>\n      <div>{contest.brief}</div>\n      <div className='paticipants' style={{ display: 'flex', alignItems: 'center', margin: '12px 0', marginLeft: '12px' }}>\n        {contest.usersData[0] && <Link key={contest.usersData[0]._id} to={'/u/' + contest.usersData[0].username} style={{ marginLeft: '-12px' }}>\n          <Avatar size={32} src={contest.usersData[0].profile.image.replace('_full_', '_small_')} />\n        </Link>}\n        {contest.usersData[1] && <Link key={contest.usersData[1]._id} to={'/u/' + contest.usersData[1].username} style={{ marginLeft: '-12px' }}>\n          <Avatar size={32} src={contest.usersData[1].profile.image.replace('_full_', '_small_')} />\n        </Link>}\n        {contest.usersData[2] && <Link key={contest.usersData[2]._id} to={'/u/' + contest.usersData[2].username} style={{ marginLeft: '-12px' }}>\n          <Avatar size={32} src={contest.usersData[2].profile.image.replace('_full_', '_small_')} />\n        </Link>}\n        {contest.stats.usersCount > 3 ?\n          <span style={{ marginLeft: '8px' }}>+{contest.stats.usersCount - 3} участников</span>\n          :\n          (contest.stats.usersCount === 0 ?\n            <span style={{ marginLeft: '8px' }}>Нет участников</span>\n            :\n            null\n          )\n        }\n      </div>\n      <Button\n        size='xl'\n        style={{ marginBottom: '24px' }}\n        onClick={this.props.go}\n        data-view='contestpage'\n        data-panel='contestpage'\n        data-contestid={contest._id}\n      >\n        Узнать\n      </Button>\n    </Div>)\n  }\n}\n\nexport default ContestsItem\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst EmptyContests = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      Конкурсы не найдены\n    </Cell>\n  </Group>\n)\n\nexport default EmptyContests\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getFestivalsInfo } from '../contests.action'\nimport Loader from '../../../components/Loader'\nimport ContestsItem from './ContestsItem'\nimport EmptyContests from './EmptyContests'\n\nimport { Group, List, Div, Button, Tabs, TabsItem } from '@vkontakte/vkui'\n\nclass Contests extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      keyword: '',\n      activeTab: 'users',\n      searchResult: []\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount')\n    this.props.getFestivalsInfo({\n      genreType: 'Все жанры',\n      sortType: 'mostPeople',\n      location: 'worldwide'\n    })\n  }\n\n  changeTab = (activeTab) => () => {\n    const { keyword } = this.state\n    this.setState({ activeTab })\n    this.handleSearch(keyword, activeTab)\n  }\n\n  fetchMoreContests = (activeTab) => {\n    const { contests } = this.props\n    this.props.getFestivalsInfo({\n      skip: contests.length,\n      limit: 7\n    })\n  }\n\n  render () {\n    const { contests, isPendingContests } = this.props\n    const { keyword, activeTab } = this.state\n    return (\n      <Group title='Текущие конкурсы'>\n        {/* keyword && <Tabs theme=\"light\">\n          <TabsItem\n            onClick={this.changeTab('users')}\n            selected={activeTab === 'users'}\n          >\n            Авторы\n          </TabsItem>\n          <TabsItem\n            onClick={this.changeTab('contests')}\n            selected={activeTab === 'contests'}\n          >\n            Посты\n          </TabsItem>\n        </Tabs> */}\n\n        {isPendingContests && <Loader />}\n\n        {contests.length === 0 && keyword && <EmptyContests />}\n\n        {contests.length > 0 &&\n          <List>\n            {contests.map(contest => <ContestsItem key={contest._id} contest={contest} go={this.props.go} />)}\n            <Div>\n              <Button size=\"xl\" level=\"secondary\" onClick={this.fetchMoreContests}>Загрузить еще</Button>\n            </Div>\n          </List>\n        }\n      </Group>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    contests: state.contests.contests,\n    isPendingContests: state.contests.isPendingContests,\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getFestivalsInfo\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contests)\n","import gql from 'graphql-tag'\n\nexport const getComments = gql`\n  query getComments($objectId: String!, $parentId: String, $festId: String,  $skip: Int, $limit: Int) {\n    getComments(objectId: $objectId, parentId: $parentId, festId: $festId,  skip: $skip, limit: $limit) {\n      _id\n      createdAt\n      postedAt\n      content\n      slug\n      objectType\n      objectId\n      parentId\n      userId\n      spamScore\n      author {\n        _id\n        username\n        roles\n        emails {\n          verified\n        }\n        profile {\n          name\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const insertComment = gql`\n  mutation insertComment(\n    $content: String!,\n    $objectType: String!,\n    $objectId: String!,\n    $parentId: String,\n    $title: String!,\n    $userId: String!\n    $ratingCount: Int,\n    $currRating: Float,\n    $newRating: Int,\n  ) {\n    insertComment(\n      content: $content,\n      objectType: $objectType,\n      objectId: $objectId,\n      parentId: $parentId,\n      title: $title,\n      userId: $userId,\n      ratingCount: $ratingCount,\n      currRating: $currRating,\n      newRating: $newRating,\n    ){\n      _id\n      createdAt\n      postedAt\n      content\n      objectType\n      objectId\n      parentId\n      userId\n      author {\n        _id\n        username\n        emails {\n          verified\n        }\n        profile {\n          name\n          image\n        }\n      }\n    }\n  }\n`\n\nexport const updateComment = gql`\n  mutation updateComment(\n    $_id: ID!,\n    $content: String!,\n    $objectType: String!,\n    $objectId: String!,\n    $parentId: String\n  ) {\n    updateComment(\n      _id: $_id,\n      content: $content,\n      objectType: $objectType,\n      objectId: $objectId,\n      parentId: $parentId\n    )\n  }\n`\n\nexport const deleteComment = gql`\n  mutation deleteComment($_id: ID!, $userId: String!, $objectType: String!, $objectId: String!, $parentId: String) {\n    deleteComment(\n      _id: $_id,\n      userId: $userId,\n      objectType: $objectType,\n      objectId: $objectId,\n      parentId: $parentId\n    )\n  }\n`\n\nexport const markCommentAsSpam = gql`\n  mutation markCommentAsSpam($_id: ID!, $postUserId: String!, $commentUserId: String!, $spamScore: Int!) {\n    markCommentAsSpam(\n      _id: $_id,\n      postUserId: $postUserId,\n      commentUserId: $commentUserId,\n      spamScore: $spamScore\n    )\n  }\n`\n","import { client } from '../../ApolloClient'\nimport { getComments, insertComment, updateComment, deleteComment } from '../../api/Comment'\n\nimport {\n  GET_COMMENTS,\n  CREATE_COMMENT,\n  UPDATE_COMMENT,\n  DELETE_COMMENT\n} from './comments.type'\n\nexport const getCommentsFunc = ({objectId, parentId, festId, skip, limit}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: GET_COMMENTS.PENDING })\n\n    return client.query({\n      query: getComments,\n      variables: {\n        objectId, parentId, festId, skip, limit\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: GET_COMMENTS.SUCCESS,\n        payload: data.data.getComments,\n        error: ''\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_COMMENTS.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const insertCommentFunc = ({\n  content,\n  objectType,\n  objectId,\n  parentId,\n  title,\n  userId,\n  ratingCount,\n  currRating,\n  newRating\n}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: CREATE_COMMENT.PENDING })\n\n    return client.query({\n      query: insertComment,\n      variables: {\n        content,\n        objectType,\n        objectId,\n        parentId,\n        title,\n        userId,\n        ratingCount,\n        currRating,\n        newRating\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: CREATE_COMMENT.SUCCESS,\n        payload: data.data.getFollowers\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: CREATE_COMMENT.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const updateCommentFunc = ({\n  _id,\n  content,\n  objectType,\n  objectId,\n  parentId\n}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMMENT.PENDING })\n\n    return client.query({\n      query: updateComment,\n      variables: {\n        _id,\n        content,\n        objectType,\n        objectId,\n        parentId\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: UPDATE_COMMENT.SUCCESS,\n        payload: data.data.updateComment\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: UPDATE_COMMENT.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n\nexport const deleteCommentFunc = ({\n  _id,\n  userId,\n  objectType,\n  objectId,\n  parentId\n}) => {\n  return (dispatch, getState) => {\n    dispatch({ type: DELETE_COMMENT.PENDING })\n\n    return client.query({\n      query: deleteComment,\n      variables: {\n        _id,\n        userId,\n        objectType,\n        objectId,\n        parentId\n      }\n    })\n    .then(data => {\n      dispatch({\n        type: DELETE_COMMENT.SUCCESS,\n        payload: data.data.deleteComment\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: DELETE_COMMENT.ERROR,\n        payload: error.message\n      })\n    })\n  }\n}\n","'use strict'\n\nimport React from 'react'\nimport TimeAgo from 'react-timeago'\nimport russianStrings from 'react-timeago/lib/language-strings/ru'\nimport englishStrings from 'react-timeago/lib/language-strings/en'\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\n\nclass TimeAgoExt extends React.PureComponent {\n  render () {\n    const { date, i18n, isComment } = this.props\n    let currLang = 'ru'\n    if (i18n) {\n      currLang = i18n.language\n    }\n    const formatter = currLang === 'ru' ? buildFormatter(russianStrings) : buildFormatter(englishStrings)\n    return (\n      <TimeAgo date={date} formatter={formatter} itemProp={isComment ? 'commentTime' : 'datePublished'} />\n    )\n  }\n}\n\nexport default TimeAgoExt\n","import React, { Component } from 'react'\nimport { Avatar, Cell, Div } from '@vkontakte/vkui'\nimport TimeAgoExt from '../../../components/TimeAgoExt'\n\nimport './styles.css'\n\nclass UsersInfoItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  goToUser = (e) => {\n    console.log('Go to comment', this.props.comment)\n    console.log('Event data: ', e)\n    this.props.go(e)\n  }\n\n  followUser = () => {\n\n  }\n\n  unFollowUser = () => {\n\n  }\n\n  render () {\n    const { comment } = this.props\n    let avatar = comment.author.profile.image || 'https://cdn.ryfma.com/defaults/icons/default_full_avatar.jpg'\n    if (avatar.indexOf('_full_') > 0) {\n      avatar = avatar.replace('_full_', `_medium_`)\n    } else if (avatar.indexOf('graph.facebook.com') > 0) {\n      avatar = avatar.replace('=large', '=square')\n    }\n\n    /* asideContent={comment.isFollowing ?\n      <Button onClick={this.unFollowUser}>Отписаться</Button>\n      :\n      <Button onClick={this.followUser}>Читать</Button>} */\n\n    return (<div className='comment-item'>\n      <Cell\n        key={comment._id}\n        id={comment._id}\n        size='l'\n        description={<TimeAgoExt date={comment.postedAt} isComment />}\n        before={<Avatar size={36} src={comment.author.profile.image} />}\n      >\n        {comment.author.profile.name}\n      </Cell>\n      <Div\n        className='content'\n      >\n        <div dangerouslySetInnerHTML={{ __html: comment.content }} />\n      </Div>\n    </div>)\n  }\n}\n\nexport default UsersInfoItem\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst EmptyComments = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      Комментариев пока нет. Будь первым!\n    </Cell>\n  </Group>\n)\n\nexport default EmptyComments\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getCommentsFunc } from '../comments.action'\nimport Loader from '../../../components/Loader'\nimport CommentItem from './CommentItem'\nimport EmptyComments from './EmptyComments'\n\nimport { Group, List, Button, Div } from '@vkontakte/vkui'\n\nclass CommentsList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      comments: [],\n      activeTab: 'latest',\n      lastType: props.type,\n      duration: props.duration\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount')\n    console.log('props: ', this.props)\n    const { objectId, parentId, festId, skip, limit } = this.props\n    this.props.getCommentsFunc({\n      objectId, parentId, festId, skip, limit\n    })\n  }\n\n  fetchMoreComments = ({ activeTab, replaceFeed, skip }) => () => {\n    const { objectId, parentId, festId, skip, limit } = this.props\n    this.props.getCommentsFunc({\n      objectId, parentId, festId, skip, limit\n    })\n  }\n\n  render () {\n    const { comments, isPendingComments } = this.props\n\n    console.log('comments: ', comments)\n    if (isPendingComments) {\n      return (<Loader />)\n    }\n\n    if (comments.length === 0) {\n      return (<Group>\n        <EmptyComments />\n      </Group>)\n    }\n\n    return (<Group className='comments-list'>\n      <Div>\n        <h3>Комментарии ({comments.length})</h3>\n      </Div>\n      <List>\n        {comments.map(comment =>\n          <CommentItem\n            key={comment._id}\n            comment={comment}\n            go={this.props.go}\n          />\n        )}\n        {this.state.comments.length > 0 && <Div>\n          <Button size='xl' level='secondary' onClick={this.fetchMoreComments({ activeTab: this.state.activeTab, replaceFeed: false, skip: this.state.comments.length })}>Загрузить еще</Button>\n        </Div>}\n      </List>\n    </Group>)\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    comments: state.comments.comments,\n    isPendingComments: state.comments.isPendingComments\n\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getCommentsFunc\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsList)\n","'use strict'\n\nlet defaults = {\n  wrapperId: 'notification-wrapper',\n  animationDuration: 300,\n  timeout: 5000,\n  zIndex: 10000,\n  colors: {\n    error: {\n      color: '#FFFFFF',\n      backgroundColor: '#E85742'\n    },\n    success: {\n      color: '#FFFFFF',\n      backgroundColor: '#55CA92'\n    },\n    warning: {\n      color: '#333333',\n      backgroundColor: '#F5E273'\n    },\n    info: {\n      color: '#FFFFFF',\n      backgroundColor: '#4990E2'\n    }\n  }\n}\n\nconst mergeOptions = (options) => {\n  defaults = Object.assign(defaults, options)\n}\n\nexport {defaults, mergeOptions}\n","'use strict'\n\nimport {defaults} from './defaults'\n\n/**\n * This was created as an ES6 class with a getter for the styles to allow for recomputing\n * dynamic values on each usage without calling a function.\n */\nclass Stylesheet {\n  get styles () {\n    return {\n      container: {\n        position: 'fixed',\n        width: '30%',\n        margin: '0 auto',\n        right: '0px',\n        top: '-110px',\n        left: '0px',\n        textAlign: 'center',\n        zIndex: defaults.zIndex,\n        pointerEvents: 'none',\n        transition: 'all ' + defaults.animationDuration + 'ms ease',\n        transform: 'translateY(0px)',\n\n        // Vendor Prefixes\n        msTransition: 'all ' + defaults.animationDuration + 'ms ease',\n        msTransform: 'translateY(0px)',\n        WebkitTransition: 'all ' + defaults.animationDuration + 'ms ease',\n        WebkitTransform: 'translateY(0px)',\n        OTransition: 'all ' + defaults.animationDuration + 'ms ease',\n        OTransform: 'translateY(0px)',\n        MozTransition: 'all ' + defaults.animationDuration + 'ms ease',\n        MozTransform: 'translateY(0px)'\n      },\n      content: {\n        cursor: 'pointer',\n        display: 'block',\n        width: 'auto',\n        borderRadius: '0 0 4px 4px',\n        backgroundColor: 'white',\n        padding: '8px 24px',\n        pointerEvents: 'all'\n      },\n      show: {\n        transform: 'translateY(108px)',\n        msTransform: 'translateY(108px)',\n        WebkitTransform: 'translateY(108px)',\n        OTransform: 'translateY(108px)',\n        MozTransform: 'translateY(108px)'\n      },\n      hide: {\n        transform: 'translateY(-108px)',\n        msTransform: 'translateY(-108px)',\n        WebkitTransform: 'translateY(-108px)',\n        OTransform: 'translateY(-108px)',\n        MozTransform: 'translateY(-108px)'\n      }\n    }\n  }\n}\n\nexport default new Stylesheet()\n","'use strict'\n\nimport React from 'react'\nimport {defaults} from './defaults'\nimport stylesheet from './stylesheet'\n\n/* React Notification Component */\nclass Toast extends React.PureComponent {\n  state = {\n    containerStyle: stylesheet.styles.container\n  }\n\n  componentDidMount () {\n    this.animateState()\n  }\n\n  getToastStyle = () => {\n    let {type, color} = this.props\n    let {styles} = stylesheet\n    let contentStyle = {}\n\n    /* If type is set, merge toast action styles with base */\n    switch (type) {\n      case 'success':\n      case 'error':\n      case 'warning':\n      case 'info':\n        contentStyle = Object.assign({}, styles.content, defaults.colors[type])\n        break\n      case 'custom':\n        const customStyle = {\n          backgroundColor: color.background,\n          color: color.text\n        }\n        contentStyle = Object.assign({}, styles.content, customStyle)\n        break\n      default:\n        contentStyle = Object.assign({}, styles.content)\n        break\n    }\n\n    return contentStyle\n  }\n\n  animateState = () => {\n    let {styles} = stylesheet\n\n    // Show\n    setTimeout(() => {\n      this.updateStyle(styles.show)\n    }, 100) // wait 100ms after the component is called to animate toast.\n\n    // Timeout -1 displays toast as a persistent notification\n    if (this.props.timeout === -1) {\n      return\n    }\n\n    // Hide after timeout\n    setTimeout(() => {\n      this.updateStyle(styles.hide)\n    }, this.props.timeout)\n  }\n\n  // Updates the style of the container with styles for a state (hide/show).\n  // This triggers animations.\n  updateStyle = (stateStyle) => {\n    let {styles} = stylesheet\n    this.setState({containerStyle: Object.assign({}, styles.container, stateStyle)})\n  }\n\n  render () {\n    let {text} = this.props\n    let {containerStyle} = this.state\n\n    return (<div className='toast-notification' style={containerStyle}>\n      <span style={this.getToastStyle()}>\n        {text}\n      </span>\n    </div>)\n  }\n}\n\nexport default Toast\n","'use strict'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Toast from './Toast'\nimport {defaults, mergeOptions} from './defaults'\n\nconst renderToast = (text, type, timeout, color) => {\n  const target = document.getElementById(defaults.wrapperId)\n  ReactDOM.render(<Toast text={text} timeout={timeout} type={type} color={color} />, target)\n}\n\nconst hide = () => {\n  const target = document.getElementById(defaults.wrapperId)\n  ReactDOM.unmountComponentAtNode(target)\n}\n\nconst show = (text, type, timeout, color) => {\n  if (!document.getElementById(defaults.wrapperId).hasChildNodes()) {\n    // Use default timeout if not set.\n    let renderTimeout = timeout || defaults.timeout\n\n    // Render Component with Props.\n    renderToast(text, type, renderTimeout, color)\n\n    if (renderTimeout === -1) {\n      return false\n    }\n\n    // Unmount react component after the animation finished.\n    setTimeout(() => {\n      hide()\n    }, renderTimeout + defaults.animationDuration)\n\n    return true\n  }\n\n  return false\n}\n\nexport const Notification = {\n  error: (message) => {\n    if (message.graphQLErrors) {\n      show(message.graphQLErrors[0].message, 'error', 10000)\n    } else {\n      show(message, 'error', 10000)\n    }\n  },\n  success: (message) => {\n    show(message, 'success', 3000)\n  },\n  warning: (message) => {\n    show(message, 'warning', 6000)\n  }\n}\n\n/* Export notification container */\nclass NotificationContainer extends React.PureComponent {\n  componentDidMount () {\n    mergeOptions(this.props.options)\n  }\n\n  render () {\n    return (<div id='notification-wrapper' />)\n  }\n}\n\nexport default NotificationContainer\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst PostNotFound = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      К сожалению, пост не найден\n    </Cell>\n  </Group>\n)\n\nexport default PostNotFound\n","import React, { Component } from 'react'\nimport debounce from 'lodash.debounce'\nimport ReactGA from 'react-ga'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getPostContents } from '../../posts.action'\nimport CommentsList from '../../../Comments/views/CommentsList'\nimport UsersInfoItem from '../../../Users/views/UsersInfoItem'\nimport Notification from '../../../../components/Notification/Notification'\nimport Loader from '../../../../components/Loader'\nimport PostNotFound from '../PostNotFound'\n\nimport { Group, List, Button, Div, Link } from '@vkontakte/vkui'\n\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline'\nimport Icon24LikeOutline from '@vkontakte/icons/dist/24/like_outline'\nimport Icon24Like from '@vkontakte/icons/dist/24/like'\n\nimport '../styles.css'\n\nclass PostPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      likes: 0,\n      liked: false,\n      hearts: [],\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount PostPage')\n    console.log('props: ', this.props)\n    this.props.getPostContents({ postId: this.props.postId })\n    window.scrollTo(0, 0)\n  }\n\n\n  likePost = debounce(async () => {\n    const { currUser } = this.props\n    if (!currUser) {\n      Notification.error('Войдите в свой аккаунт, чтобы лайкать посты')\n      return\n    }\n    const { title, userId, _id } = this.props.post\n    const { totalLikes, currUserLikes } = this.state\n    const likes = currUserLikes > 50 ? 50 : currUserLikes\n    try {\n      await this.props.likePost({\n        _id,\n        title,\n        userId,\n        totalLikes: likes,\n        likes: currUserLikes - totalLikes\n      })\n      ReactGA.event({\n        category: 'Post',\n        action: 'PostLiked',\n        value: likes\n      })\n      this.setState(prevState => ({\n        hearts: [],\n        totalLikes: prevState.likes\n      }))\n    } catch (error) {\n      Notification.error(error)\n    }\n  }, 2000)\n\n  createLikes = () => {\n    const {currUser} = this.props\n    if (!currUser) {\n      Notification.error('Войдите в свой аккаунт, чтобы лайкать посты')\n      return\n    }\n    const hearts = this.state.hearts || []\n    let currUserLikes = this.state.currUserLikes\n    currUserLikes += 1\n\n    const b = Math.floor(Math.random() * 100 + 1)\n    const d = ['flowOne', 'flowTwo', 'flowThree']\n    const a = ['colOne', 'colTwo', 'colThree', 'colFour', 'colFive', 'colSix']\n    const c = (Math.random() * (1.6 - 1.2) + 1.2).toFixed(1)\n\n    hearts.push({\n      id: 'part-' + b,\n      content: (\n        <div\n          key={'part-' + b}\n          className={`heartAnim part-${b}`}\n          style={{\n            display: 'block',\n            fontSize: Math.floor(Math.random() * (50 - 22) + 22) + 'px',\n            animation: d[Math.floor(Math.random() * 3)] + ' ' + c + 's linear'\n          }}>\n          <i aria-hidden='true' className={`icon heart ${a[Math.floor(Math.random() * 6)]}`}\n          />\n        </div>\n      )\n    })\n\n    this.setState({\n      hearts,\n      currUserLikes\n    })\n\n    setTimeout(() => {\n      const index = hearts.map((x) => x.id).indexOf('part-' + b)\n\n      hearts.splice(index, 1)\n      this.setState({\n        hearts\n      })\n    }, c * 900)\n  }\n\n  setNewLike = () => {\n    const {currUser} = this.props\n    if (!currUser) {\n      Notification.error(\n        'Войдите в свой аккаунт, чтобы лайкать посты'\n      )\n      return\n    }\n    if (this.state.currUserLikes < 50) {\n      this.createLikes()\n      this.setState({\n        liked: true,\n        likes: this.state.likes + 1\n      })\n      this.likePost()\n    }\n  }\n\n\n  render () {\n    const { postInfo, isPendingContentsPostInfo } = this.props\n\n    if (isPendingContentsPostInfo) {\n      return (<Loader />)\n    }\n\n    if (!postInfo) {\n      return (<PostNotFound />)\n    }\n\n    const postLikes = this.state.likes\n    const postViews = postInfo.viewCount || 0\n    const postLiked = this.state.liked\n\n    return (<>\n      <Group>\n        <Div className='post-page'>\n          <h2>{postInfo.title}</h2>\n          <img src={postInfo.coverImg} style={{ width: '100%', borderRadius: 6 }} />\n          <div dangerouslySetInnerHTML={{ __html: postInfo.htmlBody }} />\n          {postInfo.tags && <List className='post-tags'>\n            {\n              postInfo.tags.map(tag => <span><Link to={`/tags/${tag._id}/${tag.name}`}>{tag.name}</Link></span>)\n            }\n            </List>\n          }\n          <div className='tags-hint'>\n            <div>\n              <b>Вы можете поставить посту от 1 до 50 лайков!</b>\n            </div>\n          </div>\n\n          <div className='meta post-footer'>\n            <div className='post-stat-share'>\n              <div key={0} className='like-block'>\n                <div\n                  className={`post-like-label ui label basic ${postLiked ? 'liked' : ''}`}\n                >\n                  {postLiked ? (\n                    <Icon24Like />\n                  ) : (\n                    <div className='like-container'>\n                      <Icon24LikeOutline />\n                      <div className='pulse-ring' />\n                    </div>\n                  )}\n                  <div className='hearts'>\n                    {this.state.hearts.map((heart) => heart.content)}\n                  </div>\n                </div>\n                <Link\n                  to={`/p/${postInfo._id}/${postInfo.slug}/likers`}\n                  className='likers-count'>\n                  {postLikes}\n                </Link>\n              </div>\n              <div key={1} className='stats-block'>\n                <a\n                  href='#comments'\n                  className='ui label basic post-comment-label'>\n                  <Icon24CommentOutline />\n                  <span>{postInfo.commentsCount}</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          {postInfo.author && <UsersInfoItem user={postInfo.author} go={this.props.go} isPost isShortBio />}\n        </Div>\n      </Group>\n      <CommentsList\n        author={postInfo.author}\n        objectType='post'\n        objectId={postInfo._id}\n        title={postInfo.title}\n        commentsCount={postInfo.commentsCount}\n      />\n    </>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    postInfo: state.posts.postInfo,\n    isPendingContentsPostInfo: state.posts.isPendingContentsPostInfo\n\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getPostContents\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage)\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst PostNotFound = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      К сожалению, конкурс не найден\n    </Cell>\n  </Group>\n)\n\nexport default PostNotFound\n","'use strict'\n\nimport React from 'react'\nimport debounce from 'lodash.debounce'\nimport { Notification } from '../../../components/Notification/Notification'\nimport { Group, Div, Avatar, Cell, Link } from '@vkontakte/vkui'\n// import CommentsList from '../../../Comments/views/CommentsList'\n// import Slider from 'react-rangeslider'\nimport ReactGA from 'react-ga'\n\nimport './styles.css'\n\nclass ContestPostItem extends React.Component {\n  constructor (props) {\n    super(props)\n    const currUserId = props.currUserId\n    const juryRating = this.props.post.juryStats\n    let rating = 0\n    if (juryRating) {\n      for (let i = 0; i < juryRating.length; i++) {\n        if (juryRating[i].userId === currUserId) {\n          rating = juryRating[i].rating\n        }\n      }\n    }\n\n    const {\n      liked,\n      currUserLikes\n    } = props.post.post\n    this.state = {\n      showFull: false,\n      showComments: props.showComments,\n      sliderValue: rating,\n      changeRating: rating,\n      likes: props.post.likeCount,\n      liked: liked,\n      totalLikes: currUserLikes === 0 && liked ? 1 : currUserLikes,\n      currUserLikes: currUserLikes === 0 && liked ? 1 : currUserLikes,\n      hearts: [],\n      isAdultContent: props.post.post.isAdultContent,\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      if (this.props.post.post._id) {\n        await this.props.increasePostViewCount({\n          _id: this.props.post.post._id\n        })\n      }\n    } catch (err) {}\n  }\n\n  handleChange = (value) => {\n    this.setState({\n      sliderValue: value\n    })\n  }\n\n  handleChangeComplete = debounce(async () => {\n    const currUserId = this.props.currUserId\n    if (!currUserId || !this.props.isJury) {\n      Notification.error('Войдите в свой аккаунт, чтобы оценивать посты')\n      return\n    }\n    const { currentLevel } = this.props\n    const { userId, _id } = this.props.post\n    const { sliderValue, changeRating } = this.state\n    try {\n      await this.props.rateFestPost({\n        festId: this.props.festId,\n        postId: _id,\n        userId: userId,\n        rating: sliderValue,\n        changeRating: sliderValue - changeRating,\n        level: currentLevel\n      })\n      ReactGA.event({\n        category: 'Contest',\n        action: 'JuryRated',\n        value: sliderValue\n      })\n      this.setState({\n        rating: sliderValue,\n        changeRating: sliderValue\n      })\n      Notification.success('Оценка успешно поставлена!')\n    } catch (error) {\n      Notification.error(error)\n    }\n  }, 500)\n\n  createLikes = () => {\n    const currUserId = this.props.currUserId\n    if (!currUserId) {\n      Notification.error('Войдите в свой аккаунт, чтобы лайкать посты')\n      return\n    }\n    const hearts = this.state.hearts || []\n    let currUserLikes = this.state.currUserLikes\n    currUserLikes += 1\n\n    const b = Math.floor(Math.random() * 100 + 1)\n    const d = ['flowOne', 'flowTwo', 'flowThree']\n    const a = ['colOne', 'colTwo', 'colThree', 'colFour', 'colFive', 'colSix']\n    const c = (Math.random() * (1.6 - 1.2) + 1.2).toFixed(1)\n\n    hearts.push({\n      id: 'part-' + b,\n      content: (\n        <div\n          key={'part-' + b}\n          className={`heartAnim part-${b}`}\n          style={{\n            display: 'block',\n            fontSize: Math.floor(Math.random() * (50 - 22) + 22) + 'px',\n            animation: d[Math.floor(Math.random() * 3)] + ' ' + c + 's linear'\n          }}>\n          <i\n            name='heart'\n            className={`${a[Math.floor(Math.random() * 6)]}`}\n          />\n        </div>\n      )\n    })\n\n    this.setState({\n      hearts,\n      currUserLikes\n    })\n\n    setTimeout(() => {\n      const index = hearts.map((x) => x.id).indexOf('part-' + b)\n\n      hearts.splice(index, 1)\n      this.setState({\n        hearts\n      })\n    }, c * 900)\n  }\n\n  likePost = debounce(async () => {\n    const currUserId = this.props.currUserId\n    if (!currUserId) {\n      Notification.error('Войдите в свой аккаунт, чтобы лайкать посты')\n      return\n    }\n    const { title, userId, _id } = this.props.post.post\n    const { totalLikes, currUserLikes } = this.state\n    const likes = currUserLikes > 50 ? 50 : currUserLikes\n    try {\n      await this.props.likePost({\n        _id,\n        title,\n        userId,\n        totalLikes: likes,\n        likes: currUserLikes - totalLikes\n      })\n      ReactGA.event({\n        category: 'Post',\n        action: 'PostLiked',\n        value: likes\n      })\n      this.setState({\n        hearts: [],\n        totalLikes: likes\n      })\n      setTimeout(() => {\n        this.setState({\n          hearts: []\n        })\n      }, 500)\n    } catch (error) {\n      Notification.error(error)\n    }\n  }, 2000)\n\n  setNewLike = () => {\n    const currUserId = this.props.currUserId\n    if (!currUserId) {\n      Notification.error(\n        'Войдите в свой аккаунт, чтобы лайкать посты'\n      )\n      return\n    }\n    if (this.state.currUserLikes < 50) {\n      this.createLikes()\n      this.setState({\n        liked: true,\n        likes: this.state.likes + 1\n      })\n      this.likePost()\n    }\n  }\n\n  handleComments = () => {\n    this.setState({\n      showComments: true\n    })\n  }\n\n  render () {\n    const { post } = this.props\n    if (!post.author) return null\n    const excerpt = post.post.excerpt// .replace(/<br\\s*\\/>/gi, '\\n\\r').replace(/<p>/gi, '').replace(/<\\/p>/gi, '')\n    return (<div id={post._id} className='post-list-item'>\n      <Cell\n        size='l'\n        description={'от ' + post.author.profile.name}\n        before={<Avatar size={36} src={post.author.profile.image} />}\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        {post.post.title}\n      </Cell>\n      <Div\n        className='content'\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        {post.coverImg && <Avatar type='image' src={post.coverImg} className='post-image' />}\n        <div dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </Div>\n      <Cell\n        onClick={this.props.go}\n        data-view='postpage'\n        data-panel='postpage'\n        data-postid={post._id}\n        data-headertitle={post.title}\n      >\n        <Link onClick={this.goToPost}>Читать далее</Link>\n      </Cell>\n    </div>)\n  }\n}\n\nexport default ContestPostItem\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getFestPostsInfo } from '../contests.action'\nimport Loader from '../../../components/Loader'\nimport ContestPostItem from './ContestPostItem'\nimport EmptyPosts from '../../Posts/views/EmptyPosts'\n\nimport { List, Button, Div } from '@vkontakte/vkui'\n\nclass LatestPosts extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      contestPosts: [],\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount')\n    console.log('festPosts: ', this.props)\n    this.props.getFestPostsInfo({\n      festId: this.props.fest._id,\n      keyword: this.props.keyword,\n      sortType: this.props.sortType,\n      filterType: this.props.filterType,\n      city: this.props.citySelected,\n      skip: 0,\n      limit: 8\n    })\n  }\n\n  refetchData = () => {\n    this.setState({refreshing: true})\n    this.props.getFestPostsInfo({\n      festId: this.props.festId,\n      keyword: this.props.keyword,\n      sortType: this.props.sortType,\n      filterType: this.props.filterType,\n      city: this.props.citySelected,\n      skip: 0,\n      limit: 8\n    })\n    .then(() => {\n      this.setState({\n        refreshing: false,\n      })\n    })\n  }\n\n  fetchMorePosts = () => {\n    const { contestPosts } = this.props\n    this.props.getPosts({\n      festId: this.props.festId,\n      keyword: this.props.keyword,\n      sortType: this.props.sortType,\n      filterType: this.props.filterType,\n      city: this.props.citySelected,\n      skip: contestPosts.length,\n      limit: 8\n    })\n  }\n\n  render () {\n    const {contestPosts, isPendingLatestPosts} = this.props\n\n    if (!contestPosts) {\n      return (<EmptyPosts />)\n    }\n\n    if (contestPosts.length === 0) {\n      return (<EmptyPosts />)\n    }\n\n    return (\n      <div className='contest-posts-wrapper'>\n        <h2>Стихи участников</h2>\n        <div className='ui segment user-posts'>\n          <h3>Не стесняйтесь обсуждать и оценивать лайками (от 0 до 50) произведения</h3>\n          <List>\n            {contestPosts.map(post =>\n              <ContestPostItem\n                key={post._id}\n                post={post}\n                go={this.props.go}\n              />\n            )}\n            {isPendingLatestPosts && <Loader />}\n            <Div>\n              <Button size=\"xl\" level=\"secondary\" onClick={this.fetchMorePosts}>Загрузить еще</Button>\n            </Div>\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    contestPosts: state.contests.contestPosts,\n    isPendingContestPosts: state.contests.isPendingContestPosts\n\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getFestPostsInfo\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestPosts)\n","import linkifyIt from 'linkify-it'\nimport tlds from 'tlds'\n\nconst linkify = linkifyIt()\nlinkify.tlds(tlds)\n\nexport const extractHostname = (url) => {\n  let hostname\n  // find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf('://') > -1) {\n    hostname = url.split('/')[2]\n  } else {\n    hostname = url.split('/')[0]\n  }\n\n  // find & remove port number\n  hostname = hostname.split(':')[0]\n  // find & remove '?'\n  hostname = hostname.split('?')[0]\n\n  return hostname\n}\n\nexport const extractRootDomain = (url) => {\n  let domain = extractHostname(url)\n  const splitArr = domain.split('.')\n  const arrLen = splitArr.length\n\n  // extracting the root domain here\n  // if there is a subdomain\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1]\n    // check to see if it's using a Country Code Top Level Domain (ccTLD) (i.e. '.me.uk')\n    if (splitArr[arrLen - 1].length === 2 && splitArr[arrLen - 1].length === 2) {\n      // this is using a ccTLD\n      domain = splitArr[arrLen - 3] + '.' + domain\n    }\n  }\n  return domain\n}\n\nexport const getQueryParam = (searchStr, param) => {\n  const match = RegExp('[?&]' + param + '=([^&]*)').exec(searchStr)\n  if (match) {\n    const uri = match[1].replace(/\\+/g, ' ')\n    if (uri) {\n      let url = ''\n      try {\n        url = decodeURIComponent(uri)\n      } catch (err) {\n        console.log(err)\n      }\n      return url\n    }\n  }\n  return ''\n}\n\nexport const stripAndFormat = (str, isFromBlog) => {\n  let resStr = str.replace(/^(<br\\s*\\/?>)*|(<br\\s*\\/?>)*$/i, '')\n    .replace(/&nbsp;/gi, '')\n    // remove dates\n    .replace(/(0?[1-9]|[12][0-9]|3[01])[\\/\\-\\.](0?[1-9]|1[012])[\\/\\-\\.]\\d{4}/g, '')\n    // remove empty tags\n    .replace(/<(\\w+)\\b(?:\\s+[\\w\\-.:]+(?:\\s*=\\s*(?:\"[^\"]*\"|\"[^\"]*\"|[\\w\\-.:]+))?)*\\s*\\/?>\\s*<\\/\\1\\s*>/g, '')\n    // 1. compress all non-newline whitespaces to single space\n    .replace(/ +/g, ' ')\n    // 2. remove spaces from begining or end of lines\n    .replace(/^ +/gm, '')\n    // 3. compress multiple newlines to single newlines (or two)\n    .replace(/(\\n\\s*?\\n)\\s*\\n/g, '$1')\n    // 4. remove newlines from begining or end of string\n    .replace(/^\\s+|\\s+$/g, '')\n    // 5. remove hashtags from string\n    .replace(/#([^\\\\s]*)/g, '')\n    // 6. remove username from string\n    .replace(/@([^\\\\s]*)/g, '')\n    .replace('©', '')\n    .replace(/Copyright[:]?/gi, '')\n    .replace(/Свидетельство о публикации\\s?№[\\d]*/gi, '')\n    .trim()\n  if (isFromBlog) {\n    return resStr\n  } else {\n    return resStr\n      // Remove links\n      .replace(/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi, '')\n  }\n}\n\nexport const stripAndFormatMsg = (str) => {\n  return str.replace(/^(<br\\s*\\/?>)*|(<br\\s*\\/?>)*$/i, '')\n    .replace(/&nbsp/gi, '')\n    // remove empty tags\n    .replace(/<(\\w+)\\b(?:\\s+[\\w\\-.:]+(?:\\s*=\\s*(?:\"[^\"]*\"|\"[^\"]*\"|[\\w\\-.:]+))?)*\\s*\\/?>\\s*<\\/\\1\\s*>/g, '')\n    // 1. compress all non-newline whitespaces to single space\n    .replace(/ +/g, ' ')\n    // 2. remove spaces from begining or end of lines\n    .replace(/^ +/gm, '')\n    // 3. compress multiple newlines to single newlines (or two)\n    .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n')\n    // 4. remove newlines from begining or end of string\n    .replace(/^\\s+|\\s+$/g, '')\n    .trim()\n}\n\nexport const linkifyText = (text) => {\n  let result = text\n  const links = linkify.match(text)\n  if (links) {\n    links.map(href => {\n      if (href.url.includes('ryfma.com')) {\n        result = result.replace(href.url, `<a href='${href.url}' class='away-link'>${href.url}</a>`)\n      } else {\n        result = result.replace(href.url, `<a href='${href.url}' class='away-link' rel='nofollow noopener' target='_blank'>${href.url}</a>`)\n      }\n    })\n  }\n  return result\n}\n\nexport const parseText = (text) => {\n  let commText = text\n  // strip html link\n  const linkRegEx = /<a\\b[^>]*>(.*?)<\\/a>/gi\n  const hrefLinks = commText.match(linkRegEx)\n  if (hrefLinks) {\n    hrefLinks.map(href => {\n      const linkText = href.match(/<a [^>]+>([^<]+)<\\/a>/i)\n      if (linkText) {\n        commText = commText.replace(href, linkText[1])\n      }\n    })\n  }\n\n  // linkify\n  commText = linkifyText(commText)\n\n  // parse mentions\n  const mentionRegEx = /\\B[@＠][a-z0-9_-]+/gi\n  const mentions = commText.match(mentionRegEx)\n  if (mentions) {\n    commText = mentions.map(mention => commText.replace(mention, `<a href='/u/${mention.replace('@', '').replace('＠', '')}' class='mention-link' target='_blank'>${mention}</a>`))\n  }\n\n  return commText\n}\n\nexport const formatDate = (date) => {\n  let month = date.getMonth() + 1\n  month = month < 10 ? 0 + month.toString() : month\n  let day = date.getDate()\n  day = day < 10 ? 0 + day.toString() : day\n  let hours = date.getHours()\n  hours = hours < 10 ? 0 + hours.toString() : hours\n  let minutes = date.getMinutes()\n  minutes = minutes < 10 ? 0 + minutes.toString() : minutes\n  let strTime = hours + ':' + minutes\n  return `${date.getFullYear()}-${month}-${day}T${strTime}+00:00`\n}\n\nexport const youtubeParser = (url) => {\n  const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/\n  const match = url.match(regExp)\n  return (match && match[7].length === 11) ? match[7] : false\n}\n\nexport const commentSlugify = (content) => {\n  const ranges = [\n    '\\ud83c[\\udf00-\\udfff]', // U+1F300 to U+1F3FF\n    '\\ud83d[\\udc00-\\ude4f]', // U+1F400 to U+1F64F\n    '\\ud83d[\\ude80-\\udeff]'  // U+1F680 to U+1F6FF\n  ]\n  let slug = content\n    .replace(/<p>/gi, '')\n    .replace(/<\\/p>/gi, '')\n    .replace(/\\B[@＠][a-z0-9_-]+/gi, '')\n    .replace(/[&\\/\\\\#,+()$~%.'\":*!?<>{}]/gi, '')\n    .replace(new RegExp(ranges.join('|'), 'g'), '')\n    .replace(/\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F/g, '')\n    .replace(/[\\ud83d[\\ude00-\\ude4f]/gi, '')\n    .trim()\n\n  if (slug.length > 100) {\n    slug = slug.substring(0, 100)\n  } else if (slug.length < 5) {\n    slug = '-'\n  }\n  slug = slug\n    .replace(/\\s/gi, '-')\n    .replace(/\\-+/gi, '-')\n    .toLowerCase()\n\n  return slug\n}\n\nexport const stringifyObject = (obj) => {\n  Object.keys(obj).forEach(key => obj[key] === undefined && delete obj[key])\n  if (obj) {\n    return JSON.stringify(obj).replace(/[{}\"]/g, '').replace(/[:,]/g, '_')\n  }\n  return ''\n}\n\nexport const getRandomFlatColor = (h) => {\n  const result = {}\n  const PHI = 0.618033988749895\n  let s\n  let v\n  let hue\n  if (h === undefined) {\n    hue = (Math.floor(Math.random() * (360 - 0 + 1) + 0)) / 360\n    h = (hue + (hue / PHI)) % 360\n  } else {\n    h /= 360\n  }\n  v = Math.floor(Math.random() * (100 - 20 + 1) + 20)\n  s = (v - 10) / 100\n  v = v / 100\n\n  let r\n  let g\n  let b\n  let i\n  let f\n  let p\n  let q\n  let t\n  i = Math.floor(h * 6)\n  f = h * 6 - i\n  p = v * (1 - s)\n  q = v * (1 - f * s)\n  t = v * (1 - (1 - f) * s)\n  switch (i % 6) {\n    case 0:\n      r = v\n      g = t\n      b = p\n      break\n    case 1:\n      r = q\n      g = v\n      b = p\n      break\n    case 2:\n      r = p\n      g = v\n      b = t\n      break\n    case 3:\n      r = p\n      g = q\n      b = v\n      break\n    case 4:\n      r = t\n      g = p\n      b = v\n      break\n    case 5:\n      r = v\n      g = p\n      b = q\n      break\n  }\n  r = Math.round(r * 255)\n  g = Math.round(g * 255)\n  b = Math.round(b * 255)\n\n  const finalColor = '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n\n  result.h = h\n  result.s = s\n  result.v = v\n  result.r = r\n  result.g = g\n  result.b = b\n  result.hex = finalColor\n  return result\n}\n\nexport const getAverageColor = (canvas, imgSrc) => {\n  const img = new Image()\n  img.src = imgSrc\n  const ctx = canvas.getContext('2d')\n  const width = canvas.width = img.naturalWidth\n  const height = canvas.height = img.naturalHeight\n\n  ctx.drawImage(img, 0, 0)\n\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const data = imageData.data\n  let r = 0\n  let g = 0\n  let b = 0\n\n  for (let i = 0, l = data.length; i < l; i += 4) {\n    r += data[i]\n    g += data[i + 1]\n    b += data[i + 2]\n  }\n\n  r = Math.floor(r / (data.length / 4))\n  g = Math.floor(g / (data.length / 4))\n  b = Math.floor(b / (data.length / 4))\n\n  const finalColor = '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n  return finalColor\n}\n\nexport const rgbToHsl = (rSrc, gSrc, bSrc) => {\n  const r = rSrc / 255\n  const g = gSrc / 255\n  const b = bSrc / 255\n  const max = Math.max(r, g, b), min = Math.min(r, g, b)\n  let h\n  let s\n  let l = (max + min) / 2\n\n  if (max == min) {\n    h = s = 0 // achromatic\n  } else {\n    const d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return { h: h, s: s, l: l }\n}\n\nexport const getCardType = (number) => {\n  // visa\n  let re = new RegExp('^4')\n  if (number.match(re) !== null) {\n    return 'Visa'\n  }\n\n  // Mastercard\n  // Updated for Mastercard 2017 BINs expansion\n  if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(number)) {\n    return 'Mastercard'\n  }\n\n  // AMEX\n  re = new RegExp('^3[47]')\n  if (number.match(re) != null) {\n    return 'AMEX'\n  }\n\n  // Discover\n  re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)')\n  if (number.match(re) != null) {\n    return 'Discover'\n  }\n\n  // Diners\n  re = new RegExp('^36')\n  if (number.match(re) != null) {\n    return 'Diners'\n  }\n\n  // Diners - Carte Blanche\n  re = new RegExp('^30[0-5]')\n  if (number.match(re) != null) {\n    return 'Diners - Carte Blanche'\n  }\n\n  // JCB\n  re = new RegExp('^35(2[89]|[3-8][0-9])')\n  if (number.match(re) != null) {\n    return 'JCB'\n  }\n\n  // Visa Electron\n  re = new RegExp('^(4026|417500|4508|4844|491(3|7))')\n  if (number.match(re) != null) {\n    return 'Visa Electron'\n  }\n\n  return ''\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getContestInfo } from '../../contests.action'\nimport Loader from '../../../../components/Loader'\nimport ContestNotFound from '../ContestNotFound'\nimport ContestPosts from '../ContestPosts'\nimport { parseText } from '../../../../utils/Helpers'\n\nimport { Group, Button, Div, Link, Tabs, TabsItem } from '@vkontakte/vkui'\n\nimport '../styles.css'\n\nclass ContestPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      fetchedUser: props.fetchedUser,\n      sortType: 'jury',\n      showDesc: false,\n      minJuryRating: 0,\n      amountOfPosts: 0\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount PostPage')\n    this.props.getContestInfo({ slug: this.props.contestSlug, festId: this.props.contestId })\n  }\n\n  changeSort = (sortType) => (e) => {\n    this.setState({ sortType })\n  }\n\n  handleDesc = () => {\n    this.setState({\n      showDesc: !this.state.showDesc\n    })\n  }\n\n  levelDone = (level) => async () => {\n    const { minJuryRating, amountOfPosts } = this.state\n    const contestVariables = {\n      _id: this.props.contest._id,\n      levelDone: level,\n      minJuryRating,\n      amountOfPosts\n    }\n\n    try {\n      await this.props.updateContestLevel(contestVariables)\n      Notification.success(this.props.t('common:notif.contestUpdated'))\n    } catch (error) {\n      Notification.error(error)\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render () {\n    const { contest, isPendingContest } = this.props\n\n    if (isPendingContest) {\n      return (<Loader />)\n    }\n\n    if (!contest) {\n      return (<ContestNotFound />)\n    }\n\n    const { sortType, minJuryRating, amountOfPosts, fetchedUser } = this.state\n    const fest = contest\n\n    if (fest.isFestival) {\n      // return <FestivalWrapper fest={fest} location={this.props.location} match={this.props.match} />\n    }\n    const currentLevel = fest.currentLevel || 1\n    const activeLevel = currentLevel\n\n    const currDate = new Date()\n    const fromDate = new Date(fest.fromDate)\n    const toDate = new Date(fest.toDate)\n    const currUserId = fetchedUser ? fetchedUser._id : null\n    const currUser = fetchedUser\n    const juryIds = fest.juryData.map(jury => jury._id)\n    const isJury = juryIds.includes(currUserId)\n\n    const maxChars = 412\n    const festDescription = fest.description || ''\n    const numSentences = festDescription.split('\\n')\n    let sentsCounter = 0\n    let shortDesc = []\n    let restDesc = []\n    numSentences.map((text, index) => {\n      if (sentsCounter < maxChars) {\n        if (text) {\n          sentsCounter += text.length\n          shortDesc.push(<p key={index} dangerouslySetInnerHTML={{ __html: `${parseText(text)}` }} />)\n        } else {\n          shortDesc.push(<br key={index} />)\n        }\n      } else {\n        if (text) {\n          restDesc.push(<p key={index} dangerouslySetInnerHTML={{ __html: `${parseText(text)}` }} />)\n        } else {\n          restDesc.push(<br key={index} />)\n        }\n      }\n    })\n\n    const levels = []\n    if (fest.levels > 1) {\n      for (let i = 1; i < fest.levels; i++) {\n        if (i === 1) {\n          levels.push(\n            <TabsItem\n              className={activeLevel === i ? 'level item active' : 'level item'}\n            >\n              Этап {i} {i < currentLevel ? '(Завершен)' : ''} {i === currentLevel ? 'Текущий' : ''}\n            </TabsItem>\n          )\n        } else {\n          levels.push(<TabsItem className={activeLevel === i ? 'level item active' : 'level item'}>\n            Этап {i} {i < currentLevel ? '(Завершен)' : ''} {i === currentLevel ? 'Текущий' : ''}\n          </TabsItem>)\n        }\n      }\n      levels.push(<TabsItem className={(activeLevel === fest.levels) ? 'level item active' : 'level item'}>\n        Финал\n      </TabsItem>)\n    }\n\n    const isFinal = activeLevel === fest.levels\n\n    return (<Group id={contest._id}>\n      <Div className='fest-page'>\n        {fest.coverImg &&\n          <div className='ui image'>\n            <img\n              className='contest-banner'\n              itemProp='image'\n              src={fest.coverImg}\n              alt={\n                fest.genres\n                  ? fest.title + '. ' + fest.genres.map((genre) => genre).join(',')\n                  : fest.title\n              }\n            />\n          </div>\n        }\n        {/* <AdvBanner adType='postPage' />\n        <Sidebar fest={fest} isMultiLevel={levels.length > 1} currentLevel={currentLevel} /> */}\n        {currDate > toDate && <div className={`winners ${sortType}`}>\n          <h1>Победители</h1>\n          <Tabs type=\"buttons\">\n            <TabsItem\n              onClick={() => this.setState({ sortType: 'jury' })}\n              selected={this.state.sortType === 'jury'}\n            >\n              Выбор жюри\n            </TabsItem>\n            <TabsItem\n              onClick={() => this.setState({ sortType: 'likes' })}\n              selected={this.state.sortType === 'likes'}\n            >\n              Выбор читателей\n            </TabsItem>\n          </Tabs>\n          {/* <Winners\n            festId={fest._id}\n            sortType={sortType}\n            isFestival={fest.isFestival}\n            noJury={fest.noJury}\n          /> */}\n        </div>}\n        <Tabs type=\"buttons\">\n          <TabsItem\n            selected\n          >\n            Описание\n          </TabsItem>\n          <TabsItem>\n            Таблица результатов\n          </TabsItem>\n        </Tabs>\n\n        <h1 itemProp='name'>{fest.title}</h1>\n        <div className='contest-body'>\n          {festDescription.length > maxChars\n            ? <div className='fest-desc'>\n              <div className='slide-down' itemProp='description'>\n                {shortDesc}\n                {!this.state.showDesc && <div className='slide-fade' />}\n              </div>\n              <div className={this.state.showDesc ? 'slide-down-hidden open' : 'slide-down-hidden'} itemProp='description'>\n                {restDesc}\n              </div>\n              <div className='slide-down-button' onClick={this.handleDesc}>\n                {this.state.showDesc ? 'Скрыть' : 'Показать полностью'}\n              </div>\n            </div>\n            : <span itemProp='description'>{shortDesc}</span>\n          }\n        </div>\n        {fest.partners && <div className='partners'>\n          <h3>Призы от партнеров</h3>\n          <div className='partner-name'>\n            {fest.partners[0].logoLink.includes('<svg') ?\n              <div className='partner-logo' dangerouslySetInnerHTML={{ __html: fest.partners[0].logoLink }} />\n              :\n              <img src={fest.partners[0].logoLink} className='partner-logo' />\n            }\n            <h4>{fest.partners[0].name}</h4>\n          </div>\n          <div className='partner-brief' dangerouslySetInnerHTML={{ __html: fest.partners[0].brief }} />\n          <div className='partner-images'>\n            <div className='partner-image'>\n              <img src={fest.partners[0].images[0]} />\n            </div>\n            <div className='partner-image'>\n              <img src={fest.partners[0].images[1]} />\n            </div>\n            <div className='partner-image'>\n              <img src={fest.partners[0].images[2]} />\n            </div>\n          </div>\n          <a\n            href={`${fest.partners[0].url}?utm_source=ryfma&utm_medium=contest&utm_campaign=partner`}\n            target='_blank'\n            rel='noopener nofollow'\n            className='ui button partner-more'\n          >\n            Больше призов\n          </a>\n        </div>}\n        {levels.length > 0 && <Tabs type=\"buttons\" className='level-filters'>\n          {levels}\n        </Tabs>}\n        {/* levels.length > 0 && isJury && !isFinal && <Form className='level-actions'>\n          <p>Укажите условия для попадания в новый этап конкурса. Или добавьте стихи вручную самостоятельно.</p>\n          <Form.Group widths='equal'>\n            <Form.Input\n              placeholder={t('minJuryRating')}\n              value={minJuryRating}\n              onChange={this.handleInputChange}\n              name='minJuryRating'\n              label={t('minJuryRating')}\n              type='text'\n            />\n            <Form.Input\n              placeholder={t('amountOfPosts')}\n              value={amountOfPosts}\n              onChange={this.handleInputChange}\n              name='amountOfPosts'\n              label={t('amountOfPosts')}\n              type='text'\n            />\n          </Form.Group>\n          <Button primary className='level-done' onClick={this.levelDone(activeLevel)}>{t('levelDone')}</Button>\n        </Form> */}\n        <ContestPosts\n          fest={fest}\n          currentLevel={activeLevel}\n          isMultiLevel={levels.length > 1}\n          isFinal={isFinal}\n          isJury={isJury}\n          juryId={currUserId}\n          currUser={currUser}\n          go={this.props.go}\n        />\n      </Div>\n    </Group>)\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    contest: state.contests.contestInfo,\n    isPendingContest: state.contests.isPendingContest\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getContestInfo\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContestPage)\n","import React from 'react'\nimport { Group, Cell } from '@vkontakte/vkui'\n\nconst PostNotFound = ({goToFunc}) => (\n  <Group>\n    <Cell>\n      К сожалению, пользователь не найден\n    </Cell>\n  </Group>\n)\n\nexport default PostNotFound\n","import React, { Component } from 'react'\nimport debounce from 'lodash.debounce'\nimport ReactGA from 'react-ga'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getUserInfo } from '../../users.action'\nimport PostsList from '../../../Posts/views/PostsList'\nimport Loader from '../../../../components/Loader'\nimport UserNotFound from '../UserNotFound'\nimport { extractRootDomain, parseText } from '../../../../utils/Helpers'\n\nimport { Group, Avatar, HorizontalScroll, Button, Div, Link } from '@vkontakte/vkui'\n\nimport Icon16Verified from '@vkontakte/icons/dist/16/verified'\nimport Icon16Fire from '@vkontakte/icons/dist/16/fire'\nimport Icon24Globe from '@vkontakte/icons/dist/24/globe'\nimport Icon24Place from '@vkontakte/icons/dist/24/place'\nimport Icon24VK from '@vkontakte/icons/dist/24/logo_vk'\nimport Icon24Instagram from '@vkontakte/icons/dist/24/logo_instagram'\nimport Icon24Twitter from '@vkontakte/icons/dist/24/logo_twitter'\nimport Icon24Facebook from '@vkontakte/icons/dist/24/logo_facebook'\nimport Icon24Videocam from '@vkontakte/icons/dist/24/videocam'\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown'\n\nimport '../styles.css'\n\nclass UserPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showBio: false,\n      activeTab: 'latest'\n    }\n  }\n\n  componentWillMount () {\n    console.log('componentWillMount UserPage')\n    console.log('props: ', this.props)\n    this.props.getUserInfo({ username: this.props.username })\n    window.scrollTo(0, 0)\n  }\n\n  handleDesc = () => {\n    this.setState({\n      showDesc: !this.state.showDesc\n    })\n  }\n\n  render () {\n    const { user, isPendingUser } = this.props\n\n    if (isPendingUser) {\n      return (<Loader />)\n    }\n\n    if (!user) {\n      return (<UserNotFound />)\n    }\n\n    if (!user.profile) {\n      return (<UserNotFound />)\n    }\n\n    const userLinks = [\n      user.profile.vkUser,\n      user.profile.instagramUser,\n      user.profile.twitterUser,\n      user.profile.facebookUser\n    ]\n\n    const socLinks = userLinks.map(link => {\n      if (link) {\n        return link.replace('https://', '').replace('http://', '').replace('www.', '')\n      }\n    })\n\n    const maxChars = 80\n    const festDescription = user.profile.bio || ''\n    const numSentences = festDescription.split('\\n')\n    let sentsCounter = 0\n    let shortDesc = []\n    let restDesc = []\n    numSentences.map((text, index) => {\n      if (sentsCounter < maxChars) {\n        if (text) {\n          sentsCounter += text.length\n          shortDesc.push(<span key={index} dangerouslySetInnerHTML={{ __html: `${parseText(text)}` }} />)\n        }\n      } else {\n        if (text) {\n          restDesc.push(<span key={index} dangerouslySetInnerHTML={{ __html: `${parseText(text)}` }} />)\n        }\n      }\n    })\n\n    return (<div>\n      <Group>\n        <Div className='user-page'>\n          <Avatar size={130} src={user.profile.image} />\n          <div className='content'>\n            <h1>{user.profile.name}{user.emails ? (user.emails[0].verified && <Icon16Verified />) : null}</h1>\n            <div className='karma'>\n              <Icon16Fire fill='red' />\n              {user.profile.karma.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}&nbsp;Карма\n            </div>\n            {(user.profile.city || user.profile.website) && <div className='website-city'>\n              {user.profile.website &&\n                <div className='user-website'>\n                  <ReactGA.OutboundLink\n                    eventLabel='Go to User website'\n                    to={`http://${user.profile.website.replace('https://', '').replace('http://', '')}`}\n                    target='_blank'\n                    rel='noopener nofollow'\n                    className='item'\n                    role='listitem'\n                    itemProp='url'\n                  >\n                    <Icon24Globe />\n                    {extractRootDomain(user.profile.website.replace('https://', '').replace('http://', ''))}\n                  </ReactGA.OutboundLink>\n                </div>\n              }\n              {user.profile.city &&\n                <div className='user-city'>\n                  <Icon24Place />\n                  {user.profile.city}\n                </div>\n              }\n            </div>}\n            {socLinks.length &&\n              <div className='meta'>\n                <div className='ui list link horizontal'>\n                  {user.profile.vkUser\n                    ? <ReactGA.OutboundLink\n                      eventLabel='Go to User VK'\n                      to={`https://vk.com/${socLinks[0].replace('vk.com/', '')}`}\n                      target='_blank'\n                      rel='noopener nofollow'\n                      role='listitem'\n                      className='item vk'\n                      itemProp='sameAs'\n                    >\n                      <Icon24VK />\n                    </ReactGA.OutboundLink>\n                    : null\n                  }\n                  {user.profile.instagramUser\n                    ? <ReactGA.OutboundLink\n                      eventLabel='Go to User Instagram'\n                      to={`https://instagram.com/${socLinks[1].replace('instagram.com/', '')}`}\n                      target='_blank'\n                      rel='noopener nofollow'\n                      role='listitem'\n                      className='item in'\n                      itemProp='sameAs'\n                    >\n                      <Icon24Instagram />\n                    </ReactGA.OutboundLink>\n                    : null\n                  }\n                  {user.profile.twitterUser\n                    ? <ReactGA.OutboundLink\n                      eventLabel='Go to User Twitter'\n                      to={`https://twitter.com/${socLinks[2].replace('twitter.com/', '')}`}\n                      target='_blank'\n                      rel='noopener nofollow'\n                      role='listitem'\n                      className='item tw'\n                      itemProp='sameAs'\n                    >\n                      <Icon24Twitter />\n                    </ReactGA.OutboundLink>\n                    : null\n                  }\n                  {user.profile.facebookUser\n                    ? <ReactGA.OutboundLink\n                      eventLabel='Go to User Facebook'\n                      to={`https://facebook.com/${socLinks[3].replace('facebook.com/', '')}`}\n                      target='_blank'\n                      rel='noopener nofollow'\n                      role='listitem'\n                      className='item fb'\n                      itemProp='sameAs'\n                    >\n                      <Icon24Facebook />\n                    </ReactGA.OutboundLink>\n                    : null\n                  }\n                  {user.profile.youtubeUser\n                    ? <ReactGA.OutboundLink\n                      eventLabel='Go to User Youtube'\n                      to={`https://youtube.com/${socLinks[4].replace('youtube.com/', '')}`}\n                      target='_blank'\n                      rel='noopener nofollow'\n                      role='listitem'\n                      className='item youtube'\n                      itemProp='sameAs'\n                    >\n                      <Icon24Videocam />\n                    </ReactGA.OutboundLink>\n                    : null\n                  }\n                  {/* <Link to={user.profile.okUser} role='listitem' target='_blank' rel='noopener' className='item ok'>\n                    <i aria-hidden='true' className='icon odnoklassniki large' />\n                  </Link> */}\n                </div>\n              </div>\n            }\n            <HorizontalScroll className='user-stats'>\n              <div style={{ display: 'flex' }}>\n                <div className='item'>\n                  <b>{user.stats.postsCount || 0}</b>\n                  Постов\n                </div>\n                <div className='item'>\n                  <b>{user.stats.albumsCount || 0}</b>\n                  Альбомов\n                </div>\n                <div className='item'>\n                  <b>{user.stats.booksCount || 0}</b>\n                  Книг\n                </div>\n                <div className='item'>\n                  <b>{user.stats.followersCount || 0}</b>\n                  Читателей\n                </div>\n                <div className='item'>\n                  <b>{user.stats.followingCount || 0}</b>\n                  Читаемых\n                </div>\n              </div>\n            </HorizontalScroll>\n            {user.profile.bio && <div className='extra'>\n              {user.profile.bio.length > maxChars\n                ? <div className='user-bio'>\n                  <div className='slide-down' itemProp='description'>\n                    {shortDesc}\n                    {!this.state.showDesc && <div className='slide-fade' />}\n                  </div>\n                  <div className={this.state.showDesc ? 'slide-down-hidden open' : 'slide-down-hidden'} itemProp='description'>\n                    {restDesc}\n                  </div>\n                  <div className='slide-down-button' onClick={this.handleDesc}>\n                    {this.state.showDesc ? <Icon24Dropdown /> : <Icon24Dropdown />}\n                  </div>\n                </div>\n                : <span itemProp='description'>{shortDesc}</span>\n              }\n            </div>\n            }\n          </div>\n        </Div>\n      </Group>\n      <PostsList\n        type={this.state.activeTab}\n        shortPost={this.props.shortPost}\n        hideAds\n        userId={user._id}\n        currUser={this.props.currUser}\n        limit={this.props.limit}\n        keyword={this.state.keyword}\n        go={this.props.go}\n        personal\n        replaceFeed={this.props.replaceFeed}\n      />\n    </div>)\n  }\n}\n\nfunction mapStateToProps (state) {\n  console.log('mapStateToProps')\n  console.log(state)\n  return {\n    user: state.users.user,\n    isPendingUser: state.users.isPendingUser\n\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    getUserInfo\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage)\n","import React from 'react'\nimport VKConnect from '@vkontakte/vkui-connect'\nimport { Epic, FixedLayout, Tabs, TabsItem, HorizontalScroll, Tabbar, TabbarItem, View, Root, Panel, PanelHeader, HeaderButton, platform, IOS } from '@vkontakte/vkui'\nimport DataManager from './utils/DataManager'\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back'\nimport Icon24Back from '@vkontakte/icons/dist/24/back'\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed'\nimport Icon28Search from '@vkontakte/icons/dist/28/search'\nimport Icon28Write from '@vkontakte/icons/dist/28/write'\nimport Icon28Favorite from '@vkontakte/icons/dist/28/favorite'\nimport Icon28User from '@vkontakte/icons/dist/28/user'\n\nimport PostsList from './screens/Posts/views/PostsList'\nimport Search from './screens/Search/views/SearchPage'\nimport Contests from './screens/Contests/views/Contests'\n\nimport PostPage from './screens/Posts/views/page/PostPage'\nimport ContestPage from './screens/Contests/views/page/ContestPage'\nimport UserPage from './screens/Users/views/page/UserPage'\n\n// import Editor from './screens/Editor'\n// import UserProfile from './screens/UserProfile'\n// import About from './screens/About'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      activeStory: 'epicPages',\n      activeView: 'feed',\n      activePanel: 'feed',\n      activeTab: 'latest',\n      epicTab: 'feed',\n      username: 'polina',\n      headerModalTitle: 'Полина (Pola) Шибеева',\n      popularTab: 'day',\n      fetchedUser: null,\n      userInfoDenied: false\n    }\n  }\n\n  componentDidMount () {\n    this._isMounted = true\n    // this.getUserInfo()\n    // this.getTheme()\n  }\n\n  componentWillUnmount () {\n    DataManager.clear()\n    this._isMounted = false\n  }\n\n  getUserInfo = () => {\n    VKConnect.subscribe(e => {\n      switch (e.detail.type) {\n        case 'VKWebAppGetUserInfoResult':\n          if (this._isMounted) this.setState({ fetchedUser: e.detail.data, activeTab: 'myfeed' })\n          break\n        case 'VKWebAppGetUserInfoFailed':\n          if (this._isMounted) this.setState({ userInfoDenied: true, activeTab: 'latest' })\n          break\n        default:\n          this.setState({ activeTab: 'latest' })\n          // console.log(e.detail.type)\n          break\n      }\n    })\n    VKConnect.send('VKWebAppGetUserInfo', {})\n  }\n\n  getTheme = () => {\n    VKConnect.subscribe(e => {\n      switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n          let schemeAttribute = document.createAttribute('scheme')\n          schemeAttribute.value = e.detail.data.scheme\n            ? e.detail.data.scheme\n            : 'client_light'\n          document.body.attributes.setNamedItem(schemeAttribute)\n          break\n        default:\n          // console.log(e.detail.type)\n          break\n      }\n    })\n  }\n\n  go = (e) => {\n    const { view, panel, postid, contestid, contestslug, userid, username, headertitle } = e.currentTarget.dataset\n    const { activeStory, activeView, activeTab, activePanel } = this.state\n    console.log('New params: ', e.currentTarget.dataset)\n    let newState = {\n      activeStory: 'modalPages',\n      activeTab: null,\n      returnStory: activeStory === 'modalPages' ? 'modalPages' : 'epicPages',\n      returnView: activeView,\n      returnPanel: activePanel,\n      returnTab: activeTab,\n    }\n\n    if (panel) {\n      newState = {\n        ...newState,\n        activePanel: panel\n      }\n    }\n\n    if (view) {\n      newState = {\n        ...newState,\n        activeView: view\n      }\n    }\n\n    if (postid) {\n      newState = {\n        ...newState,\n        postId: postid,\n      }\n    }\n\n    if (contestid) {\n      newState = {\n        ...newState,\n        contestId: contestid,\n        contestSlug: contestslug,\n      }\n    }\n\n    if (userid) {\n      newState = {\n        ...newState,\n        userId: userid,\n        username: username,\n      }\n    }\n\n    if (headertitle) {\n      newState = {\n        ...newState,\n        headerModalTitle: headertitle\n      }\n    }\n\n    this.setState(newState)\n  }\n\n  returnTo = () => {\n    const { returnStory, returnView, returnPanel, returnTab } = this.state\n    console.log('returnTo: ', this.state)\n    this.setState({\n      activeStory: returnStory || 'epicPages',\n      activeView: returnView || 'feed',\n      activePanel: returnPanel || 'feed',\n      activeTab: returnTab || 'latest',\n      returnStory: null,\n      returnView: null,\n      returnPanel: null,\n      returnTab: null\n    })\n  }\n\n  onStoryChange = (activeView) => (e) => {\n    const { story, epictab } = e.currentTarget.dataset\n    console.log('story change', e.currentTarget.dataset)\n    if (story === 'epicPages') {\n      this.setState({ activeStory: story, epicTab: epictab, activeView, activeTab: 'latest' })\n    } else {\n      this.setState({ activeStory: story, epicTab: epictab, activeView })\n    }\n  }\n\n  render () {\n    const { fetchedUser, userInfoDenied } = this.state\n    console.log('state: ', this.state)\n    const osname = platform()\n\n    return (<Epic\n      activeStory={this.state.activeStory}\n      tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange('feed')}\n            selected={this.state.epicTab === 'feed'}\n            data-story='epicPages'\n            data-epictab='feed'\n          ><Icon28Newsfeed /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange('search')}\n            selected={this.state.epicTab === 'search'}\n            data-story='epicPages'\n            data-epictab='search'\n          ><Icon28Search /></TabbarItem>\n        {/* <TabbarItem\n            onClick={this.onStoryChange('write')}\n            selected={this.state.epicTab === 'write'}\n            data-story='epicPages'\n            data-epictab='write'\n          ><Icon28Write/></TabbarItem> */}\n          <TabbarItem\n            onClick={this.onStoryChange('contests')}\n            selected={this.state.epicTab === 'contests'}\n            data-story='epicPages'\n            data-epictab='contests'\n          ><Icon28Favorite/></TabbarItem>\n        {/* <TabbarItem\n            onClick={this.onStoryChange('user')}\n            selected={this.state.epicTab === 'user'}\n            data-story='epicPages'\n            data-epictab='user'\n          ><Icon28User /></TabbarItem> */}\n        </Tabbar>\n      }\n    >\n      <Root id='epicPages' activeView={this.state.activeView}>\n        <View id='feed' activePanel='feed'>\n          <Panel id='feed'>\n            <PanelHeader\n              noShadow\n              left={\n                <HeaderButton>\n\n                </HeaderButton>\n              }\n              right={\n                <HeaderButton>\n\n                </HeaderButton>\n              }\n            >\n              Лента постов\n            </PanelHeader>\n            <FixedLayout vertical='top'>\n              <Tabs theme='header' type='buttons'>\n                <HorizontalScroll>\n                  {this.state.fetchedUser && <TabsItem\n                    onClick={() => this.setState({ activeTab: 'myfeed' })}\n                    selected={this.state.activeTab === 'myfeed'}\n                  >\n                    Моя лента\n                  </TabsItem>}\n                  <TabsItem\n                    onClick={() => this.setState({ activeTab: 'latest' })}\n                    selected={this.state.activeTab === 'latest'}\n                  >\n                    Последнее\n                  </TabsItem>\n                  <TabsItem\n                    onClick={() => this.setState({ activeTab: 'popular' })}\n                    selected={this.state.activeTab === 'popular'}\n                  >\n                    Популярное\n                  </TabsItem>\n                </HorizontalScroll>\n              </Tabs>\n            </FixedLayout>\n            {this.state.fetchedUser && this.state.activeTab === 'myfeed' &&\n              <Root activeView='latest'>\n                <View id='latest' activePanel='latest'>\n                  <Panel id='latest'>\n                    <PostsList go={this.go} type='myfeed' personal />\n                  </Panel>\n                </View>\n              </Root>\n            }\n            {this.state.activeTab === 'latest' &&\n              <Root activeView='latest'>\n                <View id='latest' activePanel='latest'>\n                  <Panel id='latest'>\n                    <PostsList go={this.go} type='latest' />\n                  </Panel>\n                </View>\n              </Root>\n            }\n            {this.state.activeTab === 'popular' &&\n              <Root activeView='latest'>\n                <View id='latest' activePanel='latest'>\n                  <Panel id='latest'>\n                    <PostsList go={this.go} type='popular' duration={this.state.popularTab} />\n                  </Panel>\n                </View>\n              </Root>\n            }\n          </Panel>\n        </View>\n        <View id='search' activePanel='search'>\n          <Panel id='search'>\n            <PanelHeader noShadow>Поиск</PanelHeader>\n            <Search go={this.go} />\n          </Panel>\n        </View>\n        {/* <View id='write' activePanel='write'>\n          <Panel id='write'>\n            <PanelHeader>Создание поста</PanelHeader>\n          </Panel>\n        </View> */}\n        <View id='contests' activePanel='contests'>\n          <Panel id='contests'>\n            <PanelHeader>Конкурсы</PanelHeader>\n            <Contests go={this.go} />\n          </Panel>\n        </View>\n        <View id='user' activePanel='user'>\n          <Panel id='user'>\n            <PanelHeader>Иван Иванов</PanelHeader>\n          </Panel>\n        </View>\n      </Root>\n      <Root id='modalPages' activeView={this.state.activeView}>\n        <View id='postpage' activePanel={this.state.activePanel}>\n          <Panel id='postpage'>\n            <PanelHeader\n              left={<HeaderButton onClick={this.returnTo}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}\n              addon={<HeaderButton onClick={this.returnTo}>Назад</HeaderButton>}\n            >\n              {this.state.headerModalTitle}\n            </PanelHeader>\n            <PostPage fetchedUser={fetchedUser} postId={this.state.postId} go={this.go} />\n          </Panel>\n        </View>\n        <View id='contestpage' activePanel={this.state.activePanel}>\n          <Panel id='contestpage'>\n            <PanelHeader\n              left={<HeaderButton onClick={this.returnTo}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}\n              addon={<HeaderButton onClick={this.returnTo}>Назад</HeaderButton>}\n            >\n              {this.state.headerModalTitle}\n            </PanelHeader>\n            <ContestPage fetchedUser={fetchedUser} contestSlug={this.state.contestSlug} contestId={this.state.contestId} go={this.go} />\n          </Panel>\n        </View>\n        <View id='userpage' activePanel={this.state.activePanel}>\n          <Panel id='userpage'>\n            <PanelHeader\n              left={<HeaderButton onClick={this.returnTo}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}\n              addon={<HeaderButton onClick={this.returnTo}>Назад</HeaderButton>}\n            >\n              {this.state.headerModalTitle}\n            </PanelHeader>\n            <UserPage fetchedUser={fetchedUser} username={this.state.username} userId={this.state.userId} go={this.go} replaceFeed />\n          </Panel>\n        </View>\n      </Root>\n    </Epic>)\n  }\n}\n\nexport default App\n","import 'core-js/es6/map'\nimport 'core-js/es6/set'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\n// import { Route } from 'react-router'\n// import { ConnectedRouter, routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './RootReducer'\nimport registerServiceWorker from './sw'\n// import { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport VKConnect from '@vkontakte/vkui-connect'\n\nVKConnect.send('VKWebAppInit', {})\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// Service Worker For Cache\nregisterServiceWorker()\n"],"sourceRoot":""}